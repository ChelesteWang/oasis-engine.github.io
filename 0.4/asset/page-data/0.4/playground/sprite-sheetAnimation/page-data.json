{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.4/playground/sprite-sheetAnimation","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine object.\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create rootEntity.\n\n    var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.setPosition(0, 0, 15);\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.addComponent(_controls.OrbitControl); // Load texture and create sprite sheet animation.\n\n    engine.resourceManager.load({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*zcZVTKry5R4AAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }).then(function (texture) {\n      var spriteEntity = rootEntity.createChild(\"Sprite\");\n      spriteEntity.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, texture);\n      spriteEntity.addComponent(FrameSpriteScript);\n    }); // Run engine.\n\n    engine.run();\n  }\n  /**\n   * Script for sprite sheet animation.\n   */\n\n\n  var FrameSpriteScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(FrameSpriteScript, _Script);\n\n    function FrameSpriteScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._regions = void 0;\n      _this._reciprocalSliceWidth = void 0;\n      _this._reciprocalSliceHeight = void 0;\n      _this._totalFrames = void 0;\n      _this._frameInterval = 100;\n      _this._sprite = void 0;\n      _this._curFrameIndex = void 0;\n      _this._cumulativeTime = 0;\n      return _this;\n    }\n\n    var _proto = FrameSpriteScript.prototype;\n\n    _proto.onAwake = function onAwake() {\n      // Sprite sheet animation pictures have 4 rows and 4 columns, if you modify the picture, please modify this.\n      var row = 4;\n      var col = 4;\n      var reciprocalSliceWidth = 1 / row;\n      var reciprocalSliceHeight = 1 / col;\n      var regions = new Array();\n\n      for (var i = 0; i < col; i++) {\n        var y = i * reciprocalSliceHeight;\n\n        for (var j = 0; j < row; j++) {\n          regions.push(new _oasisEngine.Vector2(j * reciprocalSliceWidth, y));\n        }\n      }\n\n      this._sprite = this.entity.getComponent(_oasisEngine.SpriteRenderer).sprite;\n      this._regions = regions;\n      this._reciprocalSliceWidth = reciprocalSliceWidth;\n      this._reciprocalSliceHeight = reciprocalSliceHeight;\n      this._totalFrames = row * col;\n\n      this._setFrameIndex(0);\n    };\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      if (this._totalFrames <= 0) {\n        return;\n      }\n\n      var frameInterval = this._frameInterval;\n      this._cumulativeTime += deltaTime;\n\n      if (this._cumulativeTime >= frameInterval) {\n        // Need update frameIndex.\n        var addFrameCount = Math.floor(this._cumulativeTime / frameInterval);\n        this._cumulativeTime -= addFrameCount * frameInterval;\n\n        this._setFrameIndex((this._curFrameIndex + addFrameCount) % this._totalFrames);\n      }\n    };\n\n    _proto._setFrameIndex = function _setFrameIndex(frameIndex) {\n      if (this._curFrameIndex !== frameIndex) {\n        this._curFrameIndex = frameIndex;\n        var frameInfo = this._regions[frameIndex];\n        var region = this._sprite.region;\n        region.setValue(frameInfo.x, frameInfo.y, this._reciprocalSliceWidth, this._reciprocalSliceHeight);\n        this._sprite.region = region;\n      }\n    };\n\n    return FrameSpriteScript;\n  }(_oasisEngine.Script);\n});"},"name":"sprite-sheetAnimation","id":"2b860370-8414-5413-b4bb-f3ef4888946d"}}},"staticQueryHashes":[]}