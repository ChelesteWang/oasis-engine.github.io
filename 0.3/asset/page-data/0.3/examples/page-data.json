{"componentChunkName":"component---src-pages-examples-tsx","path":"/0.3/examples","result":{"data":{"allPlayground":{"nodes":[{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Animation Cross Fade\n   * @category Animation\n   */\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity();\n  var lightEntity = rootEntity.createChild(\"light\");\n  lightEntity.transform.rotate(0, 180, 0);\n  var ambient = lightEntity.addComponent(_oasisEngine.AmbientLight);\n  ambient.color = new _oasisEngine.Color(0.2, 0.2, 0.2, 1);\n  var light = lightEntity.addComponent(_oasisEngine.DirectLight);\n  light.color = new _oasisEngine.Color(0.8, 0.8, 0.8, 1.0); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.setPosition(0, 0, -10);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.run();\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/OasisHub/267000040/494/redPacket.gltf\").then(function (asset) {\n    var animations = asset.animations,\n        defaultSceneRoot = asset.defaultSceneRoot;\n    var animationNameList = animations.map(function (_ref) {\n      var name = _ref.name;\n      return name;\n    });\n    rootEntity.addChild(defaultSceneRoot);\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animation);\n    animator.playAnimationClip(animationNameList[0]);\n    var debugInfo = {\n      animation: animationNameList[0],\n      crossFade: true,\n      crossTime: 1000\n    };\n    var gui = new dat.GUI();\n    gui.add(debugInfo, \"animation\", animationNameList).onChange(function (v) {\n      var crossFade = debugInfo.crossFade,\n          crossTime = debugInfo.crossTime;\n\n      if (crossFade) {\n        animator.crossFade(v, crossTime);\n      } else {\n        animator.playAnimationClip(v);\n      }\n    });\n    gui.add(debugInfo, \"crossFade\");\n    gui.add(debugInfo, \"crossTime\", 0, 5000).name(\"过渡时间(毫秒)\");\n  });\n});"},"name":"animation-cross-fade","title":"Animation Cross Fade","category":"Animation","id":"c95dc88d-3e84-50b2-9524-724c58add9af","sourceCode":"/**\n * @title Animation Cross Fade\n * @category Animation\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AmbientLight,\n  Animation,\n  Camera,\n  Color,\n  DirectLight,\n  GLTFResource,\n  WebGLEngine\n} from \"oasis-engine\";\n\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\nconst lightEntity = rootEntity.createChild(\"light\");\nlightEntity.transform.rotate(0, 180, 0);\n\nconst ambient = lightEntity.addComponent(AmbientLight);\nambient.color = new Color(0.2, 0.2, 0.2, 1);\nconst light = lightEntity.addComponent(DirectLight);\nlight.color = new Color(0.8, 0.8, 0.8, 1.0);\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.setPosition(0, 0, -10);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.run();\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/OasisHub/267000040/494/redPacket.gltf\")\n  .then((asset) => {\n    const { animations, defaultSceneRoot } = asset;\n    const animationNameList = animations.map(({ name }) => name);\n\n    rootEntity.addChild(defaultSceneRoot);\n\n    const animator = defaultSceneRoot.getComponent(Animation);\n    animator.playAnimationClip(animationNameList[0]);\n\n    const debugInfo = {\n      animation: animationNameList[0],\n      crossFade: true,\n      crossTime: 1000\n    };\n\n    const gui = new dat.GUI();\n\n    gui.add(debugInfo, \"animation\", animationNameList).onChange((v) => {\n      const { crossFade, crossTime } = debugInfo;\n\n      if (crossFade) {\n        animator.crossFade(v, crossTime);\n      } else {\n        animator.playAnimationClip(v);\n      }\n    });\n\n    gui.add(debugInfo, \"crossFade\");\n    gui.add(debugInfo, \"crossTime\", 0, 5000).name(\"过渡时间(毫秒)\");\n  });\n","formatedCode":"<span class=\"token comment\">/**\n * @title Animation Cross Fade\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AmbientLight<span class=\"token punctuation\">,</span>\n  Animation<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> ambient <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AmbientLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nambient<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> light <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/267000040/494/redPacket.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animationNameList <span class=\"token operator\">=</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">playAnimationClip</span><span class=\"token punctuation\">(</span>animationNameList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> debugInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      animation<span class=\"token operator\">:</span> animationNameList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      crossFade<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      crossTime<span class=\"token operator\">:</span> <span class=\"token number\">1000</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"animation\"</span><span class=\"token punctuation\">,</span> animationNameList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> crossFade<span class=\"token punctuation\">,</span> crossTime <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> debugInfo<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>crossFade<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        animator<span class=\"token punctuation\">.</span><span class=\"token function\">crossFade</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> crossTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        animator<span class=\"token punctuation\">.</span><span class=\"token function\">playAnimationClip</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"crossFade\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"crossTime\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"过渡时间(毫秒)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Buffer Mesh\n   * @category Mesh\n   */\n  // Create engine and get root entity.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  var canvas = engine.canvas;\n  canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(\"Root\"); // Create light.\n\n  var lightEntity = rootEntity.createChild(\"DirectLight\");\n  var ambient = lightEntity.addComponent(_oasisEngine.AmbientLight);\n  var directLight = lightEntity.addComponent(_oasisEngine.DirectLight);\n  ambient.color = new _oasisEngine.Color(0.2, 0.2, 0.2);\n  directLight.color = new _oasisEngine.Color(0.3, 0.4, 0.4); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 6, 10);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  cameraEntity.addComponent(_oasisEngine.Camera); // Create custom cube.\n  // Use createCustomMesh() to create custom cube mesh.\n\n  var cubeEntity = rootEntity.createChild(\"Cube\");\n  var cubeRenderer = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n  var cubeGeometry = createCustomMesh(engine, 1.0);\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  cubeEntity.transform.rotate(0, 60, 0);\n  cubeRenderer.mesh = cubeGeometry;\n  cubeRenderer.setMaterial(material); // Run engine.\n\n  engine.run();\n  /**\n   * Create cube geometry with custom BufferGeometry.\n   * @param engine - Engine\n   * @param size - Cube size\n   * @returns Cube mesh\n   */\n\n  function createCustomMesh(engine, size) {\n    var geometry = new _oasisEngine.BufferMesh(engine, \"CustomCubeGeometry\"); // prettier-ignore\n    // Create vertices data.\n\n    var vertices = new Float32Array([// Up\n    -size, size, -size, 0, 1, 0, size, size, -size, 0, 1, 0, size, size, size, 0, 1, 0, -size, size, size, 0, 1, 0, // Down\n    -size, -size, -size, 0, -1, 0, size, -size, -size, 0, -1, 0, size, -size, size, 0, -1, 0, -size, -size, size, 0, -1, 0, // Left\n    -size, size, -size, -1, 0, 0, -size, size, size, -1, 0, 0, -size, -size, size, -1, 0, 0, -size, -size, -size, -1, 0, 0, // Right\n    size, size, -size, 1, 0, 0, size, size, size, 1, 0, 0, size, -size, size, 1, 0, 0, size, -size, -size, 1, 0, 0, // Front\n    -size, size, size, 0, 0, 1, size, size, size, 0, 0, 1, size, -size, size, 0, 0, 1, -size, -size, size, 0, 0, 1, // Back\n    -size, size, -size, 0, 0, -1, size, size, -size, 0, 0, -1, size, -size, -size, 0, 0, -1, -size, -size, -size, 0, 0, -1]); // prettier-ignore\n    // Create indices data.\n\n    var indices = new Uint16Array([// Up\n    0, 2, 1, 2, 0, 3, // Down\n    4, 6, 7, 6, 4, 5, // Left\n    8, 10, 9, 10, 8, 11, // Right\n    12, 14, 15, 14, 12, 13, // Front\n    16, 18, 17, 18, 16, 19, // Back\n    20, 22, 23, 22, 20, 21]); // Create gpu vertex buffer and index buffer.\n\n    var vertexBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.VertexBuffer, vertices, _oasisEngine.BufferUsage.Static);\n    var indexBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.IndexBuffer, indices, _oasisEngine.BufferUsage.Static); // Bind buffer\n\n    geometry.setVertexBufferBinding(vertexBuffer, 24);\n    geometry.setIndexBufferBinding(indexBuffer, _oasisEngine.IndexFormat.UInt16); // Add vertexElement\n\n    geometry.setVertexElements([new _oasisEngine.VertexElement(\"POSITION\", 0, _oasisEngine.VertexElementFormat.Vector3, 0), new _oasisEngine.VertexElement(\"NORMAL\", 12, _oasisEngine.VertexElementFormat.Vector3, 0)]); // Add one sub geometry.\n\n    geometry.addSubMesh(0, indices.length);\n    return geometry;\n  }\n});"},"name":"buffer-mesh","title":"Buffer Mesh","category":"Mesh","id":"b483d65d-1da8-5c6d-9613-001a22b504a8","sourceCode":"/**\n * @title Buffer Mesh\n * @category Mesh\n */\nimport { AmbientLight, BlinnPhongMaterial, Buffer, BufferBindFlag, BufferMesh, BufferUsage, Camera, Color, DirectLight, Engine, IndexFormat, Mesh, MeshRenderer, Vector3, VertexElement, VertexElementFormat, WebGLEngine } from \"oasis-engine\";\n\n// Create engine and get root entity.\nconst engine = new WebGLEngine(\"canvas\");\nconst canvas = engine.canvas;\ncanvas.resizeByClientSize();\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity(\"Root\");\n\n// Create light.\nconst lightEntity = rootEntity.createChild(\"DirectLight\");\nconst ambient = lightEntity.addComponent(AmbientLight);\nconst directLight = lightEntity.addComponent(DirectLight);\nambient.color = new Color(0.2, 0.2, 0.2);\ndirectLight.color = new Color(0.3, 0.4, 0.4);\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 6, 10);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\ncameraEntity.addComponent(Camera);\n\n// Create custom cube.\n// Use createCustomMesh() to create custom cube mesh.\nconst cubeEntity = rootEntity.createChild(\"Cube\");\nconst cubeRenderer = cubeEntity.addComponent(MeshRenderer);\nconst cubeGeometry = createCustomMesh(engine, 1.0);\nconst material = new BlinnPhongMaterial(engine);\ncubeEntity.transform.rotate(0, 60, 0);\ncubeRenderer.mesh = cubeGeometry;\ncubeRenderer.setMaterial(material);\n\n// Run engine.\nengine.run();\n\n/**\n * Create cube geometry with custom BufferGeometry.\n * @param engine - Engine\n * @param size - Cube size\n * @returns Cube mesh\n */\nfunction createCustomMesh(engine: Engine, size: number): Mesh {\n  const geometry = new BufferMesh(engine, \"CustomCubeGeometry\");\n\n  // prettier-ignore\n  // Create vertices data.\n  const vertices: Float32Array = new Float32Array([\n    \t// Up\n    \t-size, size, -size, 0, 1, 0, size, size, -size, 0, 1, 0, size, size, size, 0, 1, 0, -size, size, size, 0, 1, 0,\n    \t// Down\n    \t-size, -size, -size, 0, -1, 0, size, -size, -size, 0, -1, 0, size, -size, size, 0, -1, 0, -size, -size, size, 0, -1, 0,\n    \t// Left\n    \t-size, size, -size, -1, 0, 0, -size, size, size, -1, 0, 0, -size, -size, size, -1, 0, 0, -size, -size, -size, -1, 0, 0,\n    \t// Right\n    \tsize, size, -size, 1, 0, 0, size, size, size, 1, 0, 0, size, -size, size, 1, 0, 0, size, -size, -size, 1, 0, 0,\n    \t// Front\n    \t-size, size, size, 0, 0, 1, size, size, size, 0, 0, 1, size, -size, size, 0, 0, 1, -size, -size, size, 0, 0, 1,\n    \t// Back\n    \t-size, size, -size, 0, 0, -1, size, size, -size, 0, 0, -1, size, -size, -size, 0, 0, -1, -size, -size, -size, 0, 0, -1]);\n\n  // prettier-ignore\n  // Create indices data.\n  const indices: Uint16Array = new Uint16Array([\n    \t// Up\n    \t0, 2, 1, 2, 0, 3,\n    \t// Down\n    \t4, 6, 7, 6, 4, 5,\n    \t// Left\n    \t8, 10, 9, 10, 8, 11,\n    \t// Right\n    \t12, 14, 15, 14, 12, 13,\n    \t// Front\n    \t16, 18, 17, 18, 16, 19,\n    \t// Back\n    \t20, 22, 23, 22, 20, 21]);\n\n  // Create gpu vertex buffer and index buffer.\n  const vertexBuffer = new Buffer(engine, BufferBindFlag.VertexBuffer, vertices, BufferUsage.Static);\n  const indexBuffer = new Buffer(engine, BufferBindFlag.IndexBuffer, indices, BufferUsage.Static);\n\n  // Bind buffer\n  geometry.setVertexBufferBinding(vertexBuffer, 24);\n  geometry.setIndexBufferBinding(indexBuffer, IndexFormat.UInt16);\n\n  // Add vertexElement\n  geometry.setVertexElements([\n    new VertexElement(\"POSITION\", 0, VertexElementFormat.Vector3, 0),\n    new VertexElement(\"NORMAL\", 12, VertexElementFormat.Vector3, 0)\n  ]);\n\n  // Add one sub geometry.\n  geometry.addSubMesh(0, indices.length);\n  return geometry;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Buffer Mesh\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AmbientLight<span class=\"token punctuation\">,</span> BlinnPhongMaterial<span class=\"token punctuation\">,</span> Buffer<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">,</span> BufferMesh<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> Engine<span class=\"token punctuation\">,</span> IndexFormat<span class=\"token punctuation\">,</span> Mesh<span class=\"token punctuation\">,</span> MeshRenderer<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> VertexElement<span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine and get root entity.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create light.</span>\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DirectLight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ambient <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AmbientLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> directLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nambient<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create custom cube.</span>\n<span class=\"token comment\">// Use createCustomMesh() to create custom cube mesh.</span>\n<span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cubeRenderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cubeGeometry <span class=\"token operator\">=</span> <span class=\"token function\">createCustomMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncubeEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> cubeGeometry<span class=\"token punctuation\">;</span>\ncubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run engine.</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Create cube geometry with custom BufferGeometry.\n * @param engine - Engine\n * @param size - Cube size\n * @returns Cube mesh\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createCustomMesh</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine<span class=\"token punctuation\">,</span> size<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Mesh <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> geometry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"CustomCubeGeometry\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// prettier-ignore</span>\n  <span class=\"token comment\">// Create vertices data.</span>\n  <span class=\"token keyword\">const</span> vertices<span class=\"token operator\">:</span> Float32Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    \t<span class=\"token comment\">// Up</span>\n    \t<span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    \t<span class=\"token comment\">// Down</span>\n    \t<span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    \t<span class=\"token comment\">// Left</span>\n    \t<span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    \t<span class=\"token comment\">// Right</span>\n    \tsize<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    \t<span class=\"token comment\">// Front</span>\n    \t<span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    \t<span class=\"token comment\">// Back</span>\n    \t<span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// prettier-ignore</span>\n  <span class=\"token comment\">// Create indices data.</span>\n  <span class=\"token keyword\">const</span> indices<span class=\"token operator\">:</span> Uint16Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint16Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    \t<span class=\"token comment\">// Up</span>\n    \t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    \t<span class=\"token comment\">// Down</span>\n    \t<span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    \t<span class=\"token comment\">// Left</span>\n    \t<span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n    \t<span class=\"token comment\">// Right</span>\n    \t<span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span>\n    \t<span class=\"token comment\">// Front</span>\n    \t<span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span>\n    \t<span class=\"token comment\">// Back</span>\n    \t<span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create gpu vertex buffer and index buffer.</span>\n  <span class=\"token keyword\">const</span> vertexBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">.</span>VertexBuffer<span class=\"token punctuation\">,</span> vertices<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">.</span>Static<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> indexBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">.</span>IndexBuffer<span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">.</span>Static<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Bind buffer</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexBufferBinding</span><span class=\"token punctuation\">(</span>vertexBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setIndexBufferBinding</span><span class=\"token punctuation\">(</span>indexBuffer<span class=\"token punctuation\">,</span> IndexFormat<span class=\"token punctuation\">.</span>UInt16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Add vertexElement</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexElements</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POSITION\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NORMAL\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Add one sub geometry.</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">addSubMesh</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> geometry<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  /**\n  * @title Free Controls\n  * @category Controls\n  */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootNode = scene.createRootEntity(\"root\"); // 在场景中创建相机节点、配置位置和目标方向\n\n  var cameraNode = rootNode.createChild(\"camera_node\");\n  cameraNode.transform.setPosition(0, 0, 20);\n  var camera = cameraNode.addComponent(_oasisEngine.Camera);\n  camera.farClipPlane = 2000;\n  var controler = cameraNode.addComponent(_controls.FreeControl);\n  controler.movementSpeed = 100;\n  controler.rotateSpeed = 1;\n\n  var cuboid = _oasisEngine.PrimitiveMesh.createCuboid(engine, 50, 50, 50);\n\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  material.emissiveColor = new _oasisEngine.Color(0.5, 0.6, 0.6, 1);\n\n  var groundGeometry = _oasisEngine.PrimitiveMesh.createPlane(engine, 2000, 2000, 100, 100);\n\n  groundGeometry.subMesh.topology = _oasisEngine.MeshTopology.LineStrip;\n  var groundMaterial = new _oasisEngine.BlinnPhongMaterial(engine);\n  groundMaterial.emissiveColor = new _oasisEngine.Color(1, 1, 1, 1); // create meshes in scene\n\n  for (var i = 0; i < 100; i++) {\n    var cube = rootNode.createChild(\"cube\");\n    cube.transform.setPosition(Math.random() * 2000 - 1000, Math.random() * 200, Math.random() * 2000 - 1000);\n    var cubeRenderer = cube.addComponent(_oasisEngine.MeshRenderer);\n    cubeRenderer.mesh = cuboid;\n    cubeRenderer.setMaterial(material);\n  } // Ground\n\n\n  var ground = rootNode.createChild(\"ground\");\n  ground.transform.setPosition(0, -25, 0);\n  ground.transform.rotate(-90, 0, 0);\n  var groundRender = ground.addComponent(_oasisEngine.MeshRenderer);\n  groundRender.mesh = groundGeometry;\n  groundRender.setMaterial(groundMaterial); // Run engine\n\n  engine.run();\n});"},"name":"controls-free","title":"Free Controls","category":"Controls","id":"e2ec91ff-30fc-5ef5-8e32-f4d9db8bac38","sourceCode":" /**\n * @title Free Controls\n * @category Controls\n */\n import { Camera, BlinnPhongMaterial, MeshRenderer, MeshTopology, WebGLEngine, Color, PrimitiveMesh } from \"oasis-engine\";\n import { FreeControl } from \"@oasis-engine/controls\";\n \n const engine = new WebGLEngine(\"canvas\");\n engine.canvas.resizeByClientSize();\n const scene = engine.sceneManager.activeScene;\n const rootNode = scene.createRootEntity(\"root\");\n \n // 在场景中创建相机节点、配置位置和目标方向\n const cameraNode = rootNode.createChild(\"camera_node\");\n cameraNode.transform.setPosition(0, 0, 20);\n \n const camera = cameraNode.addComponent(Camera);\n camera.farClipPlane = 2000;\n \n const controler = cameraNode.addComponent(FreeControl);\n controler.movementSpeed = 100;\n controler.rotateSpeed = 1;\n \n const cuboid = PrimitiveMesh.createCuboid(engine, 50, 50, 50);\n const material = new BlinnPhongMaterial(engine);\n material.emissiveColor = new Color(0.5, 0.6, 0.6, 1);\n \n const groundGeometry = PrimitiveMesh.createPlane(engine, 2000, 2000, 100, 100);\n groundGeometry.subMesh.topology = MeshTopology.LineStrip;\n const groundMaterial = new BlinnPhongMaterial(engine);\n groundMaterial.emissiveColor = new Color(1, 1, 1, 1);\n \n // create meshes in scene\n for (let i = 0; i < 100; i++) {\n   let cube = rootNode.createChild(\"cube\");\n   cube.transform.setPosition(Math.random() * 2000 - 1000, Math.random() * 200, Math.random() * 2000 - 1000);\n   const cubeRenderer = cube.addComponent(MeshRenderer);\n   cubeRenderer.mesh = cuboid;\n   cubeRenderer.setMaterial(material);\n }\n \n // Ground\n const ground = rootNode.createChild(\"ground\");\n ground.transform.setPosition(0, -25, 0);\n ground.transform.rotate(-90, 0, 0);\n const groundRender = ground.addComponent(MeshRenderer);\n groundRender.mesh = groundGeometry;\n groundRender.setMaterial(groundMaterial);\n \n // Run engine\n engine.run();\n ","formatedCode":" <span class=\"token comment\">/**\n * @title Free Controls\n * @category Controls\n */</span>\n <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> BlinnPhongMaterial<span class=\"token punctuation\">,</span> MeshRenderer<span class=\"token punctuation\">,</span> MeshTopology<span class=\"token punctuation\">,</span> WebGLEngine<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> PrimitiveMesh <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FreeControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">const</span> rootNode <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token comment\">// 在场景中创建相机节点、配置位置和目标方向</span>\n <span class=\"token keyword\">const</span> cameraNode <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n cameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n camera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">const</span> controler <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>FreeControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n controler<span class=\"token punctuation\">.</span>movementSpeed <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n controler<span class=\"token punctuation\">.</span>rotateSpeed <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">const</span> cuboid <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n material<span class=\"token punctuation\">.</span>emissiveColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">const</span> groundGeometry <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n groundGeometry<span class=\"token punctuation\">.</span>subMesh<span class=\"token punctuation\">.</span>topology <span class=\"token operator\">=</span> MeshTopology<span class=\"token punctuation\">.</span>LineStrip<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">const</span> groundMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n groundMaterial<span class=\"token punctuation\">.</span>emissiveColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token comment\">// create meshes in scene</span>\n <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">let</span> cube <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   cube<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2000</span> <span class=\"token operator\">-</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2000</span> <span class=\"token operator\">-</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">const</span> cubeRenderer <span class=\"token operator\">=</span> cube<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   cubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> cuboid<span class=\"token punctuation\">;</span>\n   cubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n \n <span class=\"token comment\">// Ground</span>\n <span class=\"token keyword\">const</span> ground <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ground\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n ground<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n ground<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">const</span> groundRender <span class=\"token operator\">=</span> ground<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n groundRender<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> groundGeometry<span class=\"token punctuation\">;</span>\n groundRender<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>groundMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token comment\">// Run engine</span>\n engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n "},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Cube\n   * @category Mesh\n   */\n  // 引入模块\n  // 创建画布 \n  var engine = new _oasisEngine.WebGLEngine(\"canvas\"); // 设置屏幕适配\n\n  engine.canvas.resizeByClientSize(); // 获取场景根实体\n\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity('root'); // 创建一个相机实体\n\n  var cameraEntity = rootEntity.createChild('camera_entity');\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 5, 10);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  camera.backgroundColor = new _oasisEngine.Vector4(1, 1, 1, 1); // 创建一个实体用来挂载方向光\n\n  var lightEntity = rootEntity.createChild('light'); // 创建一个方向光组件\n\n  var directLight = lightEntity.addComponent(_oasisEngine.DirectLight);\n  directLight.color = new _oasisEngine.Color(1.0, 1.0, 1.0);\n  directLight.intensity = 0.5; // 通过光照实体的旋转角度控制光线方向\n\n  lightEntity.transform.rotation = new _oasisEngine.Vector3(45, 45, 45); // 创建立方体实体\n\n  var cubeEntity = rootEntity.createChild('cube');\n  var cube = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n  cube.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 2, 2, 2);\n  cube.setMaterial(new _oasisEngine.BlinnPhongMaterial(engine)); // 启动引擎\n\n  engine.run();\n});"},"name":"cube","title":"Cube","category":"Mesh","id":"a52adcc7-75e0-5156-9a51-ea97a4c86ca1","sourceCode":"/**\n * @title Cube\n * @category Mesh\n */\n// 引入模块\nimport { Camera, WebGLEngine, PrimitiveMesh, BlinnPhongMaterial, DirectLight, Vector3, Vector4, Color, MeshRenderer } from 'oasis-engine';\n\n// 创建画布 \nconst engine = new WebGLEngine(\"canvas\");\n// 设置屏幕适配\nengine.canvas.resizeByClientSize();\n\n// 获取场景根实体\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity('root');\n\n// 创建一个相机实体\nlet cameraEntity = rootEntity.createChild('camera_entity');\ncameraEntity.transform.position = new Vector3(0, 5, 10);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\nlet camera = cameraEntity.addComponent(Camera);\ncamera.backgroundColor = new Vector4(1,1,1,1)\n\n// 创建一个实体用来挂载方向光\nlet lightEntity = rootEntity.createChild('light');\n\n// 创建一个方向光组件\nlet directLight = lightEntity.addComponent(DirectLight)\ndirectLight.color = new Color( 1.0, 1.0, 1.0 );\ndirectLight.intensity = 0.5;\n\n// 通过光照实体的旋转角度控制光线方向\nlightEntity.transform.rotation = new Vector3(45, 45, 45);\n\n// 创建立方体实体\nlet cubeEntity = rootEntity.createChild('cube');\nlet cube = cubeEntity.addComponent(MeshRenderer);\ncube.mesh = PrimitiveMesh.createCuboid(engine, 2, 2, 2);\ncube.setMaterial(new BlinnPhongMaterial(engine));\n\n// 启动引擎\nengine.run();","formatedCode":"<span class=\"token comment\">/**\n * @title Cube\n * @category Mesh\n */</span>\n<span class=\"token comment\">// 引入模块</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> WebGLEngine<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">,</span> BlinnPhongMaterial<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> Vector4<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> MeshRenderer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'oasis-engine'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建画布 </span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 设置屏幕适配</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 获取场景根实体</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建一个相机实体</span>\n<span class=\"token keyword\">let</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">'camera_entity'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 创建一个实体用来挂载方向光</span>\n<span class=\"token keyword\">let</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建一个方向光组件</span>\n<span class=\"token keyword\">let</span> directLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span>\ndirectLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLight<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 通过光照实体的旋转角度控制光线方向</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建立方体实体</span>\n<span class=\"token keyword\">let</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cube'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> cube <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 启动引擎</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"dat.gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"dat.gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global.dat);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, dat) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Culling Mask\n   * @category Camera\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // init camera\n\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var pos = cameraEntity.transform.position;\n  pos.setValue(10, 10, 10);\n  cameraEntity.transform.position = pos;\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0)); // init light\n\n  var light = rootEntity.addComponent(_oasisEngine.AmbientLight);\n  light.intensity = 1.2; // init cube\n\n  var cubeEntity = rootEntity.createChild(\"cube\");\n  var renderer = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n  renderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  material.baseColor = new _oasisEngine.Color(1, 0.25, 0.25, 1);\n  renderer.setMaterial(material);\n  engine.run();\n\n  function addGUI() {\n    var gui = new dat.GUI();\n    var cameraFolder = gui.addFolder(\"camera cullingMask\");\n    cameraFolder.open();\n    var constMap = {\n      EveryThing: _oasisEngine.Layer.Everything,\n      Layer1: _oasisEngine.Layer.Layer1,\n      Layer2: _oasisEngine.Layer.Layer2,\n      Layer3: _oasisEngine.Layer.Layer3\n    };\n    var cameraController = cameraFolder.add({\n      cullingMask: \"EveryThing\"\n    }, \"cullingMask\", Object.keys(constMap));\n    cameraController.onChange(function (v) {\n      camera.cullingMask = constMap[v];\n    });\n    var boxFolder = gui.addFolder(\"box layer\");\n    boxFolder.open();\n    var boxController = boxFolder.add({\n      layer: \"EveryThing\"\n    }, \"layer\", Object.keys(constMap));\n    boxController.onChange(function (v) {\n      renderer.entity.layer = constMap[v];\n    });\n  }\n\n  addGUI();\n});"},"name":"camera-culling-mask","title":"Culling Mask","category":"Camera","id":"4f315849-faa1-52f9-871a-8910abf01e80","sourceCode":"/**\n * @title Culling Mask\n * @category Camera\n */\nimport { WebGLEngine, Camera, Vector3, AmbientLight, MeshRenderer, PrimitiveMesh, BlinnPhongMaterial, Color, Layer} from \"oasis-engine\";\nimport * as dat from \"dat.gui\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// init camera\nconst cameraEntity = rootEntity.createChild(\"camera\");\ncameraEntity.addComponent(Camera);\nconst pos = cameraEntity.transform.position;\npos.setValue(10, 10, 10);\ncameraEntity.transform.position = pos;\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\n\n// init light\nconst light = rootEntity.addComponent(AmbientLight);\nlight.intensity = 1.2;\n\n// init cube\nconst cubeEntity = rootEntity.createChild(\"cube\");\nconst renderer = cubeEntity.addComponent(MeshRenderer);\nrenderer.mesh = PrimitiveMesh.createCuboid(engine, 1, 1, 1);\nconst material = new BlinnPhongMaterial(engine);\nmaterial.baseColor = new Color(1, 0.25, 0.25, 1);\nrenderer.setMaterial(material);\n\nengine.run();\n\nfunction addGUI() {\n  const gui = new dat.GUI();\n  const cameraFolder = gui.addFolder(\"camera cullingMask\");\n  cameraFolder.open();\n  const constMap = {\n    EveryThing: Layer.Everything,\n    Layer1: Layer.Layer1,\n    Layer2: Layer.Layer2,\n    Layer3: Layer.Layer3\n  };\n  const cameraController = cameraFolder.add({ cullingMask: \"EveryThing\" }, \"cullingMask\", Object.keys(constMap));\n  cameraController.onChange((v) => {\n    camera.cullingMask = constMap[v];\n  });\n\n  const boxFolder = gui.addFolder(\"box layer\");\n  boxFolder.open();\n  const boxController = boxFolder.add({ layer: \"EveryThing\" }, \"layer\", Object.keys(constMap));\n  boxController.onChange((v) => {\n    renderer.entity.layer = constMap[v];\n  });\n}\n\naddGUI();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Culling Mask\n * @category Camera\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> WebGLEngine<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> AmbientLight<span class=\"token punctuation\">,</span> MeshRenderer<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">,</span> BlinnPhongMaterial<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> Layer<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pos <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\npos<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init light</span>\n<span class=\"token keyword\">const</span> light <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AmbientLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init cube</span>\n<span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cameraFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera cullingMask\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraFolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> constMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    EveryThing<span class=\"token operator\">:</span> Layer<span class=\"token punctuation\">.</span>Everything<span class=\"token punctuation\">,</span>\n    Layer1<span class=\"token operator\">:</span> Layer<span class=\"token punctuation\">.</span>Layer1<span class=\"token punctuation\">,</span>\n    Layer2<span class=\"token operator\">:</span> Layer<span class=\"token punctuation\">.</span>Layer2<span class=\"token punctuation\">,</span>\n    Layer3<span class=\"token operator\">:</span> Layer<span class=\"token punctuation\">.</span>Layer3\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cameraController <span class=\"token operator\">=</span> cameraFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> cullingMask<span class=\"token operator\">:</span> <span class=\"token string\">\"EveryThing\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cullingMask\"</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>constMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraController<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    camera<span class=\"token punctuation\">.</span>cullingMask <span class=\"token operator\">=</span> constMap<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> boxFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"box layer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxFolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> boxController <span class=\"token operator\">=</span> boxFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> layer<span class=\"token operator\">:</span> <span class=\"token string\">\"EveryThing\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"layer\"</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>constMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxController<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    renderer<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>layer <span class=\"token operator\">=</span> constMap<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\", \"@oasis-engine/framebuffer-picker\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"), require(\"@oasis-engine/framebuffer-picker\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"], global[\"@oasisEngine/framebufferPicker\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls, _framebufferPicker) {\n  \"use strict\";\n\n  /**\n   * @title Framebuffer Picker\n   * @category Picking\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootNode = scene.createRootEntity(); //-- create engine object\n\n  var envLightNode = rootNode.createChild(\"env_light\");\n  var envLight = envLightNode.addComponent(_oasisEngine.EnvironmentMapLight); //-- create camera\n\n  var cameraNode = rootNode.createChild(\"camera_node\");\n  cameraNode.transform.position = new _oasisEngine.Vector3(0, 0, 30);\n  var camera = cameraNode.addComponent(_oasisEngine.Camera);\n  cameraNode.addComponent(_controls.OrbitControl);\n  var resources = [{\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/83219f61-7d20-4704-890a-60eb92aa6159.gltf\"\n  }, {\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }, {\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }];\n  engine.resourceManager.load(resources).then(function (res) {\n    var gltf = res[0];\n    var mesh = gltf.meshes[0];\n\n    for (var x = 0; x < 5; x++) {\n      for (var y = 0; y < 5; y++) {\n        var testNode = rootNode.createChild(\"test_mesh\" + x + y);\n        testNode.addChild(gltf.defaultSceneRoot.clone());\n        testNode.transform.position = new _oasisEngine.Vector3((x - 2) * 5, (y - 2) * 5, 0);\n      }\n    }\n\n    envLight.diffuseTexture = res[1];\n    envLight.specularTexture = res[2]; // framebuffer picker\n\n    var lastMaterial;\n    var laseBaseColor;\n    var framebufferPicker = rootNode.addComponent(_framebufferPicker.FramebufferPicker);\n    framebufferPicker.camera = camera;\n\n    framebufferPicker.onPick = function (obj) {\n      if (lastMaterial) lastMaterial.baseColor = laseBaseColor;\n\n      if (obj) {\n        var primitive = obj.primitive,\n            component = obj.component;\n        var material = component.getInstanceMaterial();\n        lastMaterial = material;\n        laseBaseColor = material.baseColor;\n        material.baseColor = new _oasisEngine.Color(1, 0, 0, 1);\n      }\n    };\n\n    document.getElementById(\"canvas\").addEventListener(\"mousedown\", function (e) {\n      console.log(e.offsetX, e.offsetY);\n      framebufferPicker.pick(e.offsetX, e.offsetY);\n    });\n  }); //-- run\n\n  engine.run();\n});"},"name":"framebuffer-picker","title":"Framebuffer Picker","category":"Picking","id":"2dbf822b-d1db-5fab-b2db-e273b423facb","sourceCode":"/**\n * @title Framebuffer Picker\n * @category Picking\n */\nimport { AssetType, Camera, Color, EnvironmentMapLight, GLTFResource, LoadItem, TextureCubeMap, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { FramebufferPicker } from \"@oasis-engine/framebuffer-picker\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootNode = scene.createRootEntity();\n//-- create engine object\n\nlet envLightNode = rootNode.createChild(\"env_light\");\nlet envLight = envLightNode.addComponent(EnvironmentMapLight);\n\n//-- create camera\nlet cameraNode = rootNode.createChild(\"camera_node\");\ncameraNode.transform.position = new Vector3(0, 0, 30);\nconst camera = cameraNode.addComponent(Camera);\ncameraNode.addComponent(OrbitControl);\n\nconst resources: LoadItem[] = [\n  { url: \"https://gw.alipayobjects.com/os/bmw-prod/83219f61-7d20-4704-890a-60eb92aa6159.gltf\" },\n  {\n    urls: [\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"\n    ],\n    type: AssetType.TextureCube\n  },\n  {\n    urls: [\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"\n    ],\n    type: AssetType.TextureCube\n  }\n];\n\nengine.resourceManager.load(resources).then((res) => {\n  const gltf = <GLTFResource>res[0];\n\n  let mesh = gltf.meshes[0];\n  for (let x = 0; x < 5; x++) {\n    for (let y = 0; y < 5; y++) {\n      let testNode = rootNode.createChild(\"test_mesh\" + x + y);\n      testNode.addChild(gltf.defaultSceneRoot.clone());\n      testNode.transform.position = new Vector3((x - 2) * 5, (y - 2) * 5, 0);\n    }\n  }\n\n  envLight.diffuseTexture = <TextureCubeMap>res[1];\n  envLight.specularTexture = <TextureCubeMap>res[2];\n\n  // framebuffer picker\n  let lastMaterial;\n  let laseBaseColor;\n  let framebufferPicker = rootNode.addComponent(FramebufferPicker);\n  framebufferPicker.camera = camera;\n  framebufferPicker.onPick = (obj) => {\n    if (lastMaterial) lastMaterial.baseColor = laseBaseColor;\n\n    if (obj) {\n      const { primitive, component } = obj;\n      let material = component.getInstanceMaterial();\n\n      lastMaterial = material;\n      laseBaseColor = material.baseColor;\n      material.baseColor = new Color(1, 0, 0, 1);\n    }\n  };\n\n  document.getElementById(\"canvas\").addEventListener(\"mousedown\", (e) => {\n    console.log(e.offsetX, e.offsetY);\n    framebufferPicker.pick(e.offsetX, e.offsetY);\n  });\n});\n\n//-- run\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Framebuffer Picker\n * @category Picking\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> EnvironmentMapLight<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> LoadItem<span class=\"token punctuation\">,</span> TextureCubeMap<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FramebufferPicker <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/framebuffer-picker\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootNode <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//-- create engine object</span>\n\n<span class=\"token keyword\">let</span> envLightNode <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"env_light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> envLight <span class=\"token operator\">=</span> envLightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>EnvironmentMapLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">let</span> cameraNode <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> resources<span class=\"token operator\">:</span> LoadItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/83219f61-7d20-4704-890a-60eb92aa6159.gltf\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> gltf <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span>res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> mesh <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">.</span>meshes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> testNode <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test_mesh\"</span> <span class=\"token operator\">+</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      testNode<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      testNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  envLight<span class=\"token punctuation\">.</span>diffuseTexture <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span>res<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  envLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span>res<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// framebuffer picker</span>\n  <span class=\"token keyword\">let</span> lastMaterial<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> laseBaseColor<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> framebufferPicker <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>FramebufferPicker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  framebufferPicker<span class=\"token punctuation\">.</span>camera <span class=\"token operator\">=</span> camera<span class=\"token punctuation\">;</span>\n  framebufferPicker<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onPick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastMaterial<span class=\"token punctuation\">)</span> lastMaterial<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> laseBaseColor<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> primitive<span class=\"token punctuation\">,</span> component <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> material <span class=\"token operator\">=</span> component<span class=\"token punctuation\">.</span><span class=\"token function\">getInstanceMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      lastMaterial <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n      laseBaseColor <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>offsetX<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>offsetY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    framebufferPicker<span class=\"token punctuation\">.</span><span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>offsetX<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>offsetY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- run</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // 创建画布 \n  var engine = new _oasisEngine.WebGLEngine(\"canvas\"); // 设置屏幕适配\n\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity();\n  var cameraEntity = rootEntity.createChild('camera');\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(3, 3, 3);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  cameraEntity.addComponent(_controls.OrbitControl);\n  rootEntity.addComponent(_oasisEngine.AmbientLight).intensity = 0.7;\n  rootEntity.addComponent(_oasisEngine.DirectLight).intensity = 0.3; // 旋转脚本组件\n\n  var Rotate = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(Rotate, _Script);\n\n    function Rotate() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._tempVector = new _oasisEngine.Vector3(0, 1, 0);\n      return _this;\n    }\n\n    var _proto = Rotate.prototype;\n\n    _proto.onUpdate = function onUpdate() {\n      this.entity.transform.rotate(this._tempVector);\n    };\n\n    return Rotate;\n  }(_oasisEngine.Script);\n\n  engine.resourceManager.load('https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf').then(function (gltf) {\n    var duck = gltf.defaultSceneRoot;\n    rootEntity.addChild(duck); // 添加旋转脚本组件\n\n    duck.addComponent(Rotate);\n  });\n  engine.run();\n});"},"name":"first-script","title":"Rotate Script","category":"Script","id":"3cb7c294-4750-5d2d-84b0-b595b62508d7","sourceCode":"/**\n * @title Rotate Script\n * @category Script \n */\nimport { AmbientLight, WebGLEngine, Camera, Vector3, DirectLight, Script } from 'oasis-engine';\nimport { OrbitControl } from '@oasis-engine/controls';\n\n// 创建画布 \nconst engine = new WebGLEngine(\"canvas\");\n// 设置屏幕适配\nengine.canvas.resizeByClientSize();\n\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\nconst cameraEntity = rootEntity.createChild('camera');\ncameraEntity.addComponent(Camera);\ncameraEntity.transform.setPosition(3, 3, 3);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\ncameraEntity.addComponent(OrbitControl);\n\nrootEntity.addComponent(AmbientLight).intensity = 0.7;\nrootEntity.addComponent(DirectLight).intensity = 0.3;\n\n  // 旋转脚本组件\nclass Rotate extends Script {\n  private _tempVector = new Vector3(0, 1, 0);\n  onUpdate() {\n    this.entity.transform.rotate(this._tempVector);\n  }\n}\n\nengine.resourceManager.load(\n  'https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf',\n).then(gltf => {\n  const duck = gltf.defaultSceneRoot;\n\n  rootEntity.addChild(duck);\n\n  // 添加旋转脚本组件\n  duck.addComponent(Rotate);\n});\n\nengine.run();","formatedCode":"<span class=\"token comment\">/**\n * @title Rotate Script\n * @category Script \n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AmbientLight<span class=\"token punctuation\">,</span> WebGLEngine<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> Script <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'oasis-engine'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@oasis-engine/controls'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建画布 </span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 设置屏幕适配</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">'camera'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AmbientLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">;</span>\nrootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 旋转脚本组件</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Rotate</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _tempVector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_tempVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> duck <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">;</span>\n\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>duck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 添加旋转脚本组件</span>\n  duck<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Rotate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // Create engine\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 10, 10);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 8, 0));\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  camera.farClipPlane = 2000;\n  camera.fieldOfView = 55;\n  createPlane(engine, rootEntity);\n  /**\n   * Create a plane as a child of entity.\n   */\n\n  function createPlane(engine, entity) {\n    engine.resourceManager.load({\n      url: \"https://gw.alipayobjects.com/mdn/rms_2e421e/afts/img/A*fRtNTKrsq3YAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }).then(function (texture) {\n      var planeEntity = entity.createChild(\"plane\");\n      var meshRenderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n      var material = new _oasisEngine.Material(engine, shader);\n      planeEntity.transform.setRotation(-90, 0, 0);\n      meshRenderer.mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 1245, 1245, 100, 100, false);\n      meshRenderer.setMaterial(material);\n      planeEntity.addComponent(PlaneAnimation);\n      var shaderData = material.shaderData;\n      shaderData.setTexture(\"u_baseColor\", texture);\n      shaderData.setColor(\"u_fogColor\", new _oasisEngine.Color(0.25, 0.25, 0.25, 1));\n      shaderData.setFloat(\"u_fogDensity\", 0.004);\n      shaderData.setColor(\"u_color\", new _oasisEngine.Color(86 / 255, 182 / 255, 194 / 255, 1));\n    });\n  }\n  /**\n   * Plane animation script.\n   */\n\n\n  var PlaneAnimation = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(PlaneAnimation, _Script);\n\n    function PlaneAnimation() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._planeMesh = void 0;\n      _this._initZ = void 0;\n      _this._counter = 0;\n      return _this;\n    }\n\n    var _proto = PlaneAnimation.prototype;\n\n    /**\n     * @override\n     * Called when be enabled first time, only once.\n     */\n    _proto.onAwake = function onAwake() {\n      var renderer = this.entity.getComponent(_oasisEngine.MeshRenderer);\n      var mesh = renderer.mesh;\n      var vertexCount = mesh.vertexCount;\n      var positions = mesh.getPositions();\n      var initZ = new Array(vertexCount);\n\n      for (var i = 0; i < vertexCount; i++) {\n        var position = positions[i];\n        position.z += Math.random() * 10 - 10;\n        initZ[i] = position.z;\n      }\n\n      this._initZ = initZ;\n      this._planeMesh = mesh;\n    }\n    /**\n     * @override\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    ;\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var mesh = this._planeMesh;\n      var counter = this._counter,\n          initZ = this._initZ;\n      var positions = mesh.getPositions();\n\n      for (var i = 0, n = positions.length; i < n; i++) {\n        var position = positions[i];\n        position.z = Math.sin(i + counter * 0.00002) * (initZ[i] - initZ[i] * 0.6);\n        counter += 0.1;\n      }\n\n      mesh.setPositions(positions);\n      mesh.uploadData(false);\n      this._counter = counter;\n    };\n\n    return PlaneAnimation;\n  }(_oasisEngine.Script);\n\n  var shader = _oasisEngine.Shader.create(\"test-plane\", \"uniform mat4 u_MVPMat;\\n  attribute vec4 POSITION;\\n  attribute vec2 TEXCOORD_0;\\n  \\n  uniform mat4 u_MVMat;\\n  \\n  varying vec2 v_uv;\\n  varying vec3 v_position;\\n  \\n  void main() {\\n    v_uv = TEXCOORD_0;\\n    v_position = (u_MVMat * POSITION).xyz;\\n    gl_Position = u_MVPMat * POSITION;\\n  }\", \"\\n  uniform sampler2D u_baseColor;\\n  uniform vec4 u_color;\\n  uniform vec4 u_fogColor;\\n  uniform float u_fogDensity;\\n  \\n  varying vec2 v_uv;\\n  varying vec3 v_position;\\n  \\n  void main() {\\n    vec4 color = texture2D(u_baseColor, v_uv) * u_color;\\n    float fogDistance = length(v_position);\\n    float fogAmount = 1. - exp2(-u_fogDensity * u_fogDensity * fogDistance * fogDistance * 1.442695);\\n    fogAmount = clamp(fogAmount, 0., 1.);\\n    gl_FragColor = mix(color, u_fogColor, fogAmount); \\n  }\\n  \");\n\n  engine.run();\n});"},"name":"model-mesh","title":"Model Mesh","category":"Mesh","id":"1477c3bc-6a05-58af-bae5-abe39cd2bb11","sourceCode":"/**\n * @title Model Mesh\n * @category Mesh\n */\nimport { AssetType, Camera, Color, Engine, Entity, Material, MeshRenderer, ModelMesh, PrimitiveMesh, Script, Shader, Texture2D, Vector3, WebGLEngine } from \"oasis-engine\";\n\n// Create engine\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 10, 10);\ncameraEntity.transform.lookAt(new Vector3(0, 8, 0));\nconst camera = cameraEntity.addComponent(Camera);\ncamera.farClipPlane = 2000;\ncamera.fieldOfView = 55;\n\ncreatePlane(engine, rootEntity);\n\n/**\n * Create a plane as a child of entity.\n */\nfunction createPlane(engine: Engine, entity: Entity): void {\n  engine.resourceManager\n    .load<Texture2D>({\n      url: \"https://gw.alipayobjects.com/mdn/rms_2e421e/afts/img/A*fRtNTKrsq3YAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    })\n    .then((texture) => {\n      const planeEntity = entity.createChild(\"plane\");\n      const meshRenderer = planeEntity.addComponent(MeshRenderer);\n      const material = new Material(engine, shader);\n\n      planeEntity.transform.setRotation(-90, 0, 0);\n      meshRenderer.mesh = PrimitiveMesh.createPlane(engine, 1245, 1245, 100, 100, false);\n      meshRenderer.setMaterial(material);\n\n      planeEntity.addComponent(PlaneAnimation);\n\n      const { shaderData } = material;\n      shaderData.setTexture(\"u_baseColor\", texture);\n      shaderData.setColor(\"u_fogColor\", new Color(0.25, 0.25, 0.25, 1));\n      shaderData.setFloat(\"u_fogDensity\", 0.004);\n      shaderData.setColor(\"u_color\", new Color(86 / 255, 182 / 255, 194 / 255, 1));\n    });\n}\n\n/**\n * Plane animation script.\n */\nclass PlaneAnimation extends Script {\n  private _planeMesh: ModelMesh;\n  private _initZ: number[];\n  private _counter: number = 0;\n\n  /**\n   * @override\n   * Called when be enabled first time, only once.\n   */\n  onAwake(): void {\n    const renderer = this.entity.getComponent(MeshRenderer);\n    const mesh = <ModelMesh>renderer.mesh;\n    const { vertexCount } = mesh;\n    const positions = mesh.getPositions();\n    const initZ = new Array<number>(vertexCount);\n\n    for (var i = 0; i < vertexCount; i++) {\n      const position = positions[i];\n      position.z += Math.random() * 10 - 10;\n      initZ[i] = position.z;\n    }\n    this._initZ = initZ;\n    this._planeMesh = mesh;\n  }\n\n  /**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    const mesh = this._planeMesh;\n    let { _counter: counter, _initZ: initZ } = this;\n    const positions = mesh.getPositions();\n    for (let i = 0, n = positions.length; i < n; i++) {\n      const position = positions[i];\n      position.z = Math.sin(i + counter * 0.00002) * (initZ[i] - initZ[i] * 0.6);\n      counter += 0.1;\n    }\n    mesh.setPositions(positions);\n    mesh.uploadData(false);\n    this._counter = counter;\n  }\n}\n\nconst shader = Shader.create(\n  \"test-plane\",\n  `uniform mat4 u_MVPMat;\n  attribute vec4 POSITION;\n  attribute vec2 TEXCOORD_0;\n  \n  uniform mat4 u_MVMat;\n  \n  varying vec2 v_uv;\n  varying vec3 v_position;\n  \n  void main() {\n    v_uv = TEXCOORD_0;\n    v_position = (u_MVMat * POSITION).xyz;\n    gl_Position = u_MVPMat * POSITION;\n  }`,\n\n  `\n  uniform sampler2D u_baseColor;\n  uniform vec4 u_color;\n  uniform vec4 u_fogColor;\n  uniform float u_fogDensity;\n  \n  varying vec2 v_uv;\n  varying vec3 v_position;\n  \n  void main() {\n    vec4 color = texture2D(u_baseColor, v_uv) * u_color;\n    float fogDistance = length(v_position);\n    float fogAmount = 1. - exp2(-u_fogDensity * u_fogDensity * fogDistance * fogDistance * 1.442695);\n    fogAmount = clamp(fogAmount, 0., 1.);\n    gl_FragColor = mix(color, u_fogColor, fogAmount); \n  }\n  `\n);\n\nengine.run();","formatedCode":"<span class=\"token comment\">/**\n * @title Model Mesh\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> Engine<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> Material<span class=\"token punctuation\">,</span> MeshRenderer<span class=\"token punctuation\">,</span> ModelMesh<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>fieldOfView <span class=\"token operator\">=</span> <span class=\"token number\">55</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> rootEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Create a plane as a child of entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine<span class=\"token punctuation\">,</span> entity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_2e421e/afts/img/A*fRtNTKrsq3YAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> planeEntity <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"plane\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> meshRenderer <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Material</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      planeEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      meshRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      meshRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PlaneAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> shaderData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_baseColor\"</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_fogColor\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_fogDensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.004</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_color\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">86</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">194</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Plane animation script.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PlaneAnimation</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _planeMesh<span class=\"token operator\">:</span> ModelMesh<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _initZ<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _counter<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @override\n   * Called when be enabled first time, only once.\n   */</span>\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>ModelMesh<span class=\"token operator\">></span>renderer<span class=\"token punctuation\">.</span>mesh<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> vertexCount <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> positions <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getPositions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> initZ <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>vertexCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> vertexCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      position<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n      initZ<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_initZ <span class=\"token operator\">=</span> initZ<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_planeMesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_planeMesh<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> _counter<span class=\"token operator\">:</span> counter<span class=\"token punctuation\">,</span> _initZ<span class=\"token operator\">:</span> initZ <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> positions <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getPositions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      position<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> counter <span class=\"token operator\">*</span> <span class=\"token number\">0.00002</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>initZ<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> initZ<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      counter <span class=\"token operator\">+=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">setPositions</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">uploadData</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_counter <span class=\"token operator\">=</span> counter<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> shader <span class=\"token operator\">=</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"test-plane\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">uniform mat4 u_MVPMat;\n  attribute vec4 POSITION;\n  attribute vec2 TEXCOORD_0;\n  \n  uniform mat4 u_MVMat;\n  \n  varying vec2 v_uv;\n  varying vec3 v_position;\n  \n  void main() {\n    v_uv = TEXCOORD_0;\n    v_position = (u_MVMat * POSITION).xyz;\n    gl_Position = u_MVPMat * POSITION;\n  }</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  uniform sampler2D u_baseColor;\n  uniform vec4 u_color;\n  uniform vec4 u_fogColor;\n  uniform float u_fogDensity;\n  \n  varying vec2 v_uv;\n  varying vec3 v_position;\n  \n  void main() {\n    vec4 color = texture2D(u_baseColor, v_uv) * u_color;\n    float fogDistance = length(v_position);\n    float fogAmount = 1. - exp2(-u_fogDensity * u_fogDensity * fogDistance * fogDistance * 1.442695);\n    fogAmount = clamp(fogAmount, 0., 1.);\n    gl_FragColor = mix(color, u_fogColor, fogAmount); \n  }\n  </span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  /**\n   * @title glTF of Duck\n   * @category Mesh\n   */\n  // 创建画布 \n  var engine = new _oasisEngine.WebGLEngine(\"canvas\"); // 设置屏幕适配\n\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity();\n  var cameraEntity = rootEntity.createChild('camera');\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(3, 3, 3);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  cameraEntity.addComponent(_controls.OrbitControl);\n  rootEntity.addComponent(_oasisEngine.AmbientLight).intensity = 0.7;\n  rootEntity.addComponent(_oasisEngine.DirectLight).intensity = 0.3;\n  engine.resourceManager.load('https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf').then(function (gltf) {\n    rootEntity.addChild(gltf.defaultSceneRoot);\n  });\n  engine.run();\n});"},"name":"gltf","title":"glTF of Duck","category":"Mesh","id":"6623e3d8-c560-57bb-bed2-3d5999781cc1","sourceCode":"/**\n * @title glTF of Duck\n * @category Mesh\n */\nimport { AmbientLight, WebGLEngine, Camera, Vector3, DirectLight } from 'oasis-engine';\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\n// 创建画布 \nconst engine = new WebGLEngine(\"canvas\");\n// 设置屏幕适配\nengine.canvas.resizeByClientSize();\n\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\nconst cameraEntity = rootEntity.createChild('camera');\ncameraEntity.addComponent(Camera);\ncameraEntity.transform.setPosition(3, 3, 3);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\ncameraEntity.addComponent(OrbitControl);\n\nrootEntity.addComponent(AmbientLight).intensity = 0.7;\nrootEntity.addComponent(DirectLight).intensity = 0.3;\n\nengine.resourceManager.load(\n  'https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf',\n).then(gltf => {\n  rootEntity.addChild(gltf.defaultSceneRoot);\n});\n\nengine.run();","formatedCode":"<span class=\"token comment\">/**\n * @title glTF of Duck\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AmbientLight<span class=\"token punctuation\">,</span> WebGLEngine<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> DirectLight <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'oasis-engine'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建画布 </span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 设置屏幕适配</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">'camera'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AmbientLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">;</span>\nrootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\", \"dat.gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"), require(\"dat.gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"], global.dat);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls, dat) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Load texture\n\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Umw_RJGiZLYAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    var scene = engine.sceneManager.activeScene;\n    var rootEntity = scene.createRootEntity(); // Create camera\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 20);\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.addComponent(_controls.OrbitControl); // Create plane\n\n    var entity = rootEntity.createChild();\n    var renderer = entity.addComponent(_oasisEngine.MeshRenderer);\n\n    var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 10, 10);\n\n    var material = new _oasisEngine.BlinnPhongMaterial(engine);\n    texture.anisoLevel = 16;\n    material.renderFace = _oasisEngine.RenderFace.Double;\n    material.emissiveTexture = texture;\n    material.emissiveColor.setValue(1, 1, 1, 1);\n    renderer.mesh = mesh;\n    renderer.setMaterial(material); // Add animation script\n\n    var animationScript = rootEntity.addComponent(AnimateScript); // Add data GUI\n\n    var guiData = addDataGUI(material, animationScript);\n    animationScript.guiData = guiData;\n    animationScript.material = material; // Run engine\n\n    engine.run();\n  });\n  /**\n   * Add data GUI.\n   */\n\n  function addDataGUI(material, animationScript) {\n    var gui = new dat.GUI();\n    var guiData = {\n      tilingX: 1,\n      tilingY: 1,\n      offsetX: 0,\n      offsetY: 0,\n      reset: function reset() {\n        guiData.tilingX = 1;\n        guiData.tilingY = 1;\n        guiData.offsetX = 0;\n        guiData.offsetY = 0;\n        material.tilingOffset.setValue(1, 1, 0, 0);\n      },\n      pause: function pause() {\n        animationScript.enabled = false;\n      },\n      resume: function resume() {\n        animationScript.enabled = true;\n      }\n    };\n    gui.add(guiData, \"tilingX\", 0, 10).onChange(function (value) {\n      material.tilingOffset.x = value;\n    }).listen();\n    gui.add(guiData, \"tilingY\", 0, 10).onChange(function (value) {\n      material.tilingOffset.y = value;\n    }).listen();\n    gui.add(guiData, \"offsetX\", 0, 1).onChange(function (value) {\n      material.tilingOffset.z = value;\n    }).listen();\n    gui.add(guiData, \"offsetY\", 0, 1).onChange(function (value) {\n      material.tilingOffset.w = value;\n    }).listen();\n    gui.add(guiData, \"reset\").name(\"重置\");\n    gui.add(guiData, \"pause\").name(\"暂停动画\");\n    gui.add(guiData, \"resume\").name(\"继续动画\");\n    return guiData;\n  }\n  /**\n   * Animation script.\n   */\n\n\n  var AnimateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(AnimateScript, _Script);\n\n    function AnimateScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.guiData = void 0;\n      _this.material = void 0;\n      return _this;\n    }\n\n    var _proto = AnimateScript.prototype;\n\n    /**\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var material = this.material,\n          guiData = this.guiData; // material.tilingOffset.x = guiData.tilingX = ((guiData.tilingX - 1 + deltaTime * 0.001) % 9) + 1;\n      // material.tilingOffset.y = guiData.tilingY = ((guiData.tilingY - 1 + deltaTime * 0.001) % 9) + 1;\n\n      material.tilingOffset.x = deltaTime * 0.001 % 9 + 1;\n      material.tilingOffset.y = deltaTime * 0.001 % 9 + 1;\n    };\n\n    return AnimateScript;\n  }(_oasisEngine.Script);\n});"},"name":"material-tillingoffset","title":"Tilling Offset","category":"Material","id":"b7983873-83e9-54cf-8583-db00eebc7a2e","sourceCode":"/**\n * @title Tilling Offset\n * @category Material\n */\nimport { AssetType, BlinnPhongMaterial, Camera, MeshRenderer, PrimitiveMesh, RenderFace, Script, Texture2D, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Load texture\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Umw_RJGiZLYAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    const scene = engine.sceneManager.activeScene;\n    const rootEntity = scene.createRootEntity();\n\n    // Create camera\n    const cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.position = new Vector3(0, 0, 20);\n    cameraEntity.addComponent(Camera);\n    cameraEntity.addComponent(OrbitControl);\n\n    // Create plane\n    const entity = rootEntity.createChild();\n    const renderer = entity.addComponent(MeshRenderer);\n    const mesh = PrimitiveMesh.createPlane(engine, 10, 10);\n    const material = new BlinnPhongMaterial(engine);\n\n    texture.anisoLevel = 16;\n    material.renderFace = RenderFace.Double;\n    material.emissiveTexture = texture;\n    material.emissiveColor.setValue(1, 1, 1, 1);\n\n    renderer.mesh = mesh;\n    renderer.setMaterial(material);\n\n    // Add animation script\n    const animationScript = rootEntity.addComponent(AnimateScript);\n\n    // Add data GUI\n    const guiData = addDataGUI(material, animationScript);\n    animationScript.guiData = guiData;\n    animationScript.material = material;\n\n    // Run engine\n    engine.run();\n  });\n\n/**\n * Add data GUI.\n */\nfunction addDataGUI(material: BlinnPhongMaterial, animationScript: AnimateScript): any {\n  const gui = new dat.GUI();\n  const guiData = {\n    tilingX: 1,\n    tilingY: 1,\n    offsetX: 0,\n    offsetY: 0,\n    reset: function () {\n      guiData.tilingX = 1;\n      guiData.tilingY = 1;\n      guiData.offsetX = 0;\n      guiData.offsetY = 0;\n      material.tilingOffset.setValue(1, 1, 0, 0);\n    },\n    pause: function () {\n      animationScript.enabled = false;\n    },\n    resume: function () {\n      animationScript.enabled = true;\n    }\n  };\n\n  gui\n    .add(guiData, \"tilingX\", 0, 10)\n    .onChange((value: number) => {\n      material.tilingOffset.x = value;\n    })\n    .listen();\n  gui\n    .add(guiData, \"tilingY\", 0, 10)\n    .onChange((value: number) => {\n      material.tilingOffset.y = value;\n    })\n    .listen();\n  gui\n    .add(guiData, \"offsetX\", 0, 1)\n    .onChange((value: number) => {\n      material.tilingOffset.z = value;\n    })\n    .listen();\n  gui\n    .add(guiData, \"offsetY\", 0, 1)\n    .onChange((value: number) => {\n      material.tilingOffset.w = value;\n    })\n    .listen();\n  gui.add(guiData, \"reset\").name(\"重置\");\n  gui.add(guiData, \"pause\").name(\"暂停动画\");\n  gui.add(guiData, \"resume\").name(\"继续动画\");\n\n  return guiData;\n}\n\n/**\n * Animation script.\n */\nclass AnimateScript extends Script {\n  guiData: any;\n  material: BlinnPhongMaterial;\n\n  /**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    const { material, guiData } = this;\n    // material.tilingOffset.x = guiData.tilingX = ((guiData.tilingX - 1 + deltaTime * 0.001) % 9) + 1;\n    // material.tilingOffset.y = guiData.tilingY = ((guiData.tilingY - 1 + deltaTime * 0.001) % 9) + 1;\n    material.tilingOffset.x = ((  deltaTime * 0.001) % 9) + 1;\n    material.tilingOffset.y = ((  deltaTime * 0.001) % 9) + 1;\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Tilling Offset\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> BlinnPhongMaterial<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> MeshRenderer<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">,</span> RenderFace<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Load texture</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Umw_RJGiZLYAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create camera</span>\n    <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create plane</span>\n    <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    texture<span class=\"token punctuation\">.</span>anisoLevel <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>renderFace <span class=\"token operator\">=</span> RenderFace<span class=\"token punctuation\">.</span>Double<span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>emissiveTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>emissiveColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n    renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Add animation script</span>\n    <span class=\"token keyword\">const</span> animationScript <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AnimateScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Add data GUI</span>\n    <span class=\"token keyword\">const</span> guiData <span class=\"token operator\">=</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> animationScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animationScript<span class=\"token punctuation\">.</span>guiData <span class=\"token operator\">=</span> guiData<span class=\"token punctuation\">;</span>\n    animationScript<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Run engine</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Add data GUI.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material<span class=\"token operator\">:</span> BlinnPhongMaterial<span class=\"token punctuation\">,</span> animationScript<span class=\"token operator\">:</span> AnimateScript</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> any <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> guiData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    tilingX<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    tilingY<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    offsetX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offsetY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">reset</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      guiData<span class=\"token punctuation\">.</span>tilingX <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>tilingY <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>offsetX <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>offsetY <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">pause</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animationScript<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">resume</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animationScript<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"tilingX\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"tilingY\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"offsetX\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"offsetY\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重置\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"暂停动画\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"resume\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"继续动画\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> guiData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Animation script.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AnimateScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  guiData<span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n  material<span class=\"token operator\">:</span> BlinnPhongMaterial<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> material<span class=\"token punctuation\">,</span> guiData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// material.tilingOffset.x = guiData.tilingX = ((guiData.tilingX - 1 + deltaTime * 0.001) % 9) + 1;</span>\n    <span class=\"token comment\">// material.tilingOffset.y = guiData.tilingY = ((guiData.tilingY - 1 + deltaTime * 0.001) % 9) + 1;</span>\n    material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>  deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>  deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  /**\n   * @title Particle Renderer Spritesheet\n   * @category Particles\n   */\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var controls = cameraEntity.addComponent(_controls.OrbitControl);\n  controls.autoRotate = true;\n  controls.autoRotateSpeed = Math.PI / 5;\n  engine.run();\n  var particleEntity = rootEntity.createChild(\"particle\");\n  var particles = particleEntity.addComponent(_oasisEngine.ParticleRenderer);\n  var spriteSheet = [{\n    x: 0,\n    y: 0,\n    w: 100,\n    h: 95,\n    offX: 0,\n    offY: 0,\n    sourceW: 100,\n    sourceH: 95\n  }, {\n    x: 100,\n    y: 0,\n    w: 48,\n    h: 46,\n    offX: 0,\n    offY: 0,\n    sourceW: 48,\n    sourceH: 46\n  }, {\n    x: 148,\n    y: 0,\n    w: 97,\n    h: 90,\n    offX: 0,\n    offY: 0,\n    sourceW: 97,\n    sourceH: 90\n  }, {\n    x: 245,\n    y: 0,\n    w: 148,\n    h: 128,\n    offX: 0,\n    offY: 0,\n    sourceW: 148,\n    sourceH: 128\n  }, {\n    x: 393,\n    y: 0,\n    w: 118,\n    h: 249,\n    offX: 0,\n    offY: 0,\n    sourceW: 118,\n    sourceH: 249\n  }, {\n    x: 100,\n    y: 90,\n    w: 124,\n    h: 94,\n    offX: 0,\n    offY: 0,\n    sourceW: 124,\n    sourceH: 94\n  }, {\n    x: 0,\n    y: 184,\n    w: 249,\n    h: 185,\n    offX: 0,\n    offY: 0,\n    sourceW: 249,\n    sourceH: 185\n  }, {\n    x: 0,\n    y: 95,\n    w: 86,\n    h: 83,\n    offX: 0,\n    offY: 0,\n    sourceW: 86,\n    sourceH: 83\n  }];\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*_oorR5SrpXcAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (resource) {\n    particles.maxCount = 400;\n    particles.startTimeRandomness = 5;\n    particles.position = new _oasisEngine.Vector3(0, -10, 0);\n    particles.velocity = new _oasisEngine.Vector3(0, 20, 0);\n    particles.velocityRandomness = new _oasisEngine.Vector3(10, 2, 10);\n    particles.acceleration = new _oasisEngine.Vector3(0, -10, 0);\n    particles.accelerationRandomness = new _oasisEngine.Vector3(2, 4, 5);\n    particles.rotateVelocity = 1;\n    particles.rotateVelocityRandomness = 1;\n    particles.size = 1;\n    particles.sizeRandomness = 1;\n    particles.color = new _oasisEngine.Color(0.5, 0.5, 0.5);\n    particles.colorRandomness = 1;\n    particles.isFadeIn = true;\n    particles.isFadeOut = true;\n    particles.texture = resource;\n    particles.spriteSheet = spriteSheet;\n    particles.blendMode = _oasisEngine.ParticleRendererBlendMode.Additive;\n    particles.start();\n  });\n});"},"name":"particle-renderer-spritesheet","title":"Particle Renderer Spritesheet","category":"Particles","id":"13905750-5bd3-56f7-b09e-6e14d52eb5c2","sourceCode":"/**\n * @title Particle Renderer Spritesheet\n * @category Particles\n */\nimport { AssetType, Camera, Color, ParticleRenderer, ParticleRendererBlendMode, Texture2D, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\nconst controls = cameraEntity.addComponent(OrbitControl);\ncontrols.autoRotate = true;\ncontrols.autoRotateSpeed = Math.PI / 5;\n\nengine.run();\n\nconst particleEntity = rootEntity.createChild(\"particle\");\n\nlet particles: ParticleRenderer = particleEntity.addComponent(ParticleRenderer);\n\nconst spriteSheet = [\n  {\n    x: 0,\n    y: 0,\n    w: 100,\n    h: 95,\n    offX: 0,\n    offY: 0,\n    sourceW: 100,\n    sourceH: 95\n  },\n  {\n    x: 100,\n    y: 0,\n    w: 48,\n    h: 46,\n    offX: 0,\n    offY: 0,\n    sourceW: 48,\n    sourceH: 46\n  },\n  {\n    x: 148,\n    y: 0,\n    w: 97,\n    h: 90,\n    offX: 0,\n    offY: 0,\n    sourceW: 97,\n    sourceH: 90\n  },\n  {\n    x: 245,\n    y: 0,\n    w: 148,\n    h: 128,\n    offX: 0,\n    offY: 0,\n    sourceW: 148,\n    sourceH: 128\n  },\n  {\n    x: 393,\n    y: 0,\n    w: 118,\n    h: 249,\n    offX: 0,\n    offY: 0,\n    sourceW: 118,\n    sourceH: 249\n  },\n  {\n    x: 100,\n    y: 90,\n    w: 124,\n    h: 94,\n    offX: 0,\n    offY: 0,\n    sourceW: 124,\n    sourceH: 94\n  },\n  {\n    x: 0,\n    y: 184,\n    w: 249,\n    h: 185,\n    offX: 0,\n    offY: 0,\n    sourceW: 249,\n    sourceH: 185\n  },\n  {\n    x: 0,\n    y: 95,\n    w: 86,\n    h: 83,\n    offX: 0,\n    offY: 0,\n    sourceW: 86,\n    sourceH: 83\n  }\n];\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*_oorR5SrpXcAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((resource) => {\n    particles.maxCount = 400;\n    particles.startTimeRandomness = 5;\n    particles.position = new Vector3(0, -10, 0);\n    particles.velocity = new Vector3(0, 20, 0);\n    particles.velocityRandomness = new Vector3(10, 2, 10);\n    particles.acceleration = new Vector3(0, -10, 0);\n    particles.accelerationRandomness = new Vector3(2, 4, 5);\n    particles.rotateVelocity = 1;\n    particles.rotateVelocityRandomness = 1;\n    particles.size = 1;\n    particles.sizeRandomness = 1;\n    particles.color = new Color(0.5, 0.5, 0.5);\n    particles.colorRandomness = 1;\n    particles.isFadeIn = true;\n    particles.isFadeOut = true;\n    particles.texture = resource;\n    particles.spriteSheet = spriteSheet;\n    particles.blendMode = ParticleRendererBlendMode.Additive;\n    particles.start();\n  });\n","formatedCode":"<span class=\"token comment\">/**\n * @title Particle Renderer Spritesheet\n * @category Particles\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> ParticleRenderer<span class=\"token punctuation\">,</span> ParticleRendererBlendMode<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> controls <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrols<span class=\"token punctuation\">.</span>autoRotate <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\ncontrols<span class=\"token punctuation\">.</span>autoRotateSpeed <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> particleEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"particle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> particles<span class=\"token operator\">:</span> ParticleRenderer <span class=\"token operator\">=</span> particleEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ParticleRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> spriteSheet <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">95</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">46</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">90</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">245</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">128</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">393</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">249</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">124</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">94</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">124</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">94</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">184</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">185</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">185</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">83</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">83</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*_oorR5SrpXcAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resource</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    particles<span class=\"token punctuation\">.</span>maxCount <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>startTimeRandomness <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocityRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>acceleration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>accelerationRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>rotateVelocity <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>rotateVelocityRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>sizeRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>colorRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>isFadeIn <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>isFadeOut <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>texture <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>spriteSheet <span class=\"token operator\">=</span> spriteSheet<span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>blendMode <span class=\"token operator\">=</span> ParticleRendererBlendMode<span class=\"token punctuation\">.</span>Additive<span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Particle Renderer\n   * @category Particles\n   */\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  engine.run();\n  var particleEntity = rootEntity.createChild(\"particle\");\n  var particles = particleEntity.addComponent(_oasisEngine.ParticleRenderer);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*kxloQYq2YDEAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (resource) {\n    particles.maxCount = 100;\n    particles.startTimeRandomness = 10;\n    particles.lifetime = 4;\n    particles.position = new _oasisEngine.Vector3(0, 20, 0);\n    particles.positionRandomness = new _oasisEngine.Vector3(100, 0, 0);\n    particles.velocity = new _oasisEngine.Vector3(0, -3, 0);\n    particles.velocityRandomness = new _oasisEngine.Vector3(1, 2, 0);\n    particles.accelerationRandomness = new _oasisEngine.Vector3(0, 1, 0);\n    particles.velocityRandomness = new _oasisEngine.Vector3(-1, -1, -1);\n    particles.rotateVelocity = 1;\n    particles.rotateVelocityRandomness = 1;\n    particles.size = 1;\n    particles.sizeRandomness = 0.8;\n    particles.color = new _oasisEngine.Color(0.5, 0.5, 0.5);\n    particles.colorRandomness = 1;\n    particles.isFadeIn = true;\n    particles.isFadeOut = true;\n    particles.texture = resource;\n    particles.start();\n  });\n});"},"name":"particle-renderer","title":"Particle Renderer","category":"Particles","id":"dd4d12c2-d951-5240-87e7-c59e106364bc","sourceCode":"/**\n * @title Particle Renderer\n * @category Particles\n */\nimport { AssetType, Camera, Color, ParticleRenderer, Texture2D, Vector3, WebGLEngine } from \"oasis-engine\";\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\n\nengine.run();\n\nconst particleEntity = rootEntity.createChild(\"particle\");\n\nlet particles: ParticleRenderer = particleEntity.addComponent(ParticleRenderer);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*kxloQYq2YDEAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((resource) => {\n    particles.maxCount = 100;\n    particles.startTimeRandomness = 10;\n    particles.lifetime = 4;\n    particles.position = new Vector3(0, 20, 0);\n    particles.positionRandomness = new Vector3(100, 0, 0);\n    particles.velocity = new Vector3(0, -3, 0);\n    particles.velocityRandomness = new Vector3(1, 2, 0);\n    particles.accelerationRandomness = new Vector3(0, 1, 0);\n    particles.velocityRandomness = new Vector3(-1, -1, -1);\n    particles.rotateVelocity = 1;\n    particles.rotateVelocityRandomness = 1;\n    particles.size = 1;\n    particles.sizeRandomness = 0.8;\n    particles.color = new Color(0.5, 0.5, 0.5);\n    particles.colorRandomness = 1;\n    particles.isFadeIn = true;\n    particles.isFadeOut = true;\n    particles.texture = resource;\n    particles.start();\n  });\n","formatedCode":"<span class=\"token comment\">/**\n * @title Particle Renderer\n * @category Particles\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> ParticleRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> particleEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"particle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> particles<span class=\"token operator\">:</span> ParticleRenderer <span class=\"token operator\">=</span> particleEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ParticleRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*kxloQYq2YDEAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resource</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    particles<span class=\"token punctuation\">.</span>maxCount <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>startTimeRandomness <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>lifetime <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>positionRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocityRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>accelerationRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocityRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>rotateVelocity <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>rotateVelocityRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>sizeRandomness <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>colorRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>isFadeIn <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>isFadeOut <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>texture <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\", \"dat.gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"), require(\"dat.gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"], global.dat);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls, dat) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title PBR Base\n   * @category Material\n   */\n\n  /**\n   * use PBR material\n   */\n  function usePBR(rows, cols, radius, gap) {\n    if (rows === void 0) {\n      rows = 5;\n    }\n\n    if (cols === void 0) {\n      cols = 5;\n    }\n\n    if (radius === void 0) {\n      radius = 1;\n    }\n\n    if (gap === void 0) {\n      gap = 1;\n    }\n\n    var deltaGap = radius * 2 + gap;\n    var minX = -deltaGap * (cols - 1) / 2;\n    var maxY = deltaGap * (rows - 1) / 2;\n    var deltaMetal = 1 / (cols - 1);\n    var deltaRoughness = 1 / (rows - 1); // create model mesh\n\n    var mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, radius, 64); // create renderer\n\n\n    for (var i = 0, count = rows * cols; i < count; i++) {\n      var entity = rootEntity.createChild();\n      var renderer = entity.addComponent(_oasisEngine.MeshRenderer);\n      var material = new _oasisEngine.PBRMaterial(engine);\n      var currentRow = Math.floor(i / cols);\n      var currentCol = i % cols;\n      renderer.mesh = mesh;\n      renderer.setMaterial(material);\n      entity.transform.setPosition(minX + currentCol * deltaGap, maxY - currentRow * deltaGap, 0); // pbr metallic\n\n      material.metallicFactor = 1 - deltaMetal * currentRow; // pbr roughness\n\n      material.roughnessFactor = deltaRoughness * currentCol; // base color\n\n      if (currentRow === 0) {\n        material.baseColor.setValue(186 / 255, 110 / 255, 64 / 255, 1.0);\n      } else if (currentRow === rows - 1) {\n        material.baseColor.setValue(0, 0, 0, 1);\n      }\n    }\n  }\n\n  var gui = new dat.GUI();\n  var guiDebug = {\n    env: \"forrest\",\n    introX: \"从左到右粗糙度递增\",\n    introY: \"从上到下金属度递减\"\n  };\n  gui.add(guiDebug, \"introX\");\n  gui.add(guiDebug, \"introY\"); // create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 20);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var control = cameraEntity.addComponent(_controls.OrbitControl);\n  control.maxDistance = 20;\n  control.minDistance = 2; // create skybox\n\n  var skybox = rootEntity.addComponent(_oasisEngine.SkyBox); // create env light\n\n  var envLight = rootEntity.addComponent(_oasisEngine.EnvironmentMapLight); // load env texture\n\n  engine.resourceManager.load([{\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }, {\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*4ebgQaWOLaIAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*i56eR6AbreUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*3wYERKsel5oAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*YiG7Srwmb3QAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*VUUwQrAv47sAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Dn2qSoqzfwoAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }, {\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }]).then(function (cubeMaps) {\n    envLight.diffuseTexture = cubeMaps[0];\n    envLight.specularTexture = cubeMaps[1];\n    skybox.skyBoxMap = cubeMaps[1];\n    gui.add(guiDebug, \"env\", [\"forrest\", \"road\"]).onChange(function (v) {\n      switch (v) {\n        case \"forrest\":\n          envLight.specularTexture = cubeMaps[1];\n          skybox.skyBoxMap = cubeMaps[1];\n          break;\n\n        case \"road\":\n          envLight.specularTexture = cubeMaps[2];\n          skybox.skyBoxMap = cubeMaps[2];\n          break;\n      }\n    });\n  }); // run engine\n\n  engine.run(); // show pbr materials\n\n  usePBR();\n});"},"name":"pbr-base","title":"PBR Base","category":"Material","id":"a778faa3-8665-5f68-8dd3-df194525f333","sourceCode":"/**\n * @title PBR Base\n * @category Material\n */\nimport { AssetType, Camera, EnvironmentMapLight, MeshRenderer, PBRMaterial, PrimitiveMesh, SkyBox, TextureCubeMap, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\n\n/**\n * use PBR material\n */\nfunction usePBR(rows = 5, cols = 5, radius = 1, gap = 1) {\n  const deltaGap = radius * 2 + gap;\n  const minX = (-deltaGap * (cols - 1)) / 2;\n  const maxY = (deltaGap * (rows - 1)) / 2;\n  const deltaMetal = 1 / (cols - 1);\n  const deltaRoughness = 1 / (rows - 1);\n\n  // create model mesh\n  const mesh = PrimitiveMesh.createSphere(engine, radius, 64);\n\n  // create renderer\n  for (let i = 0, count = rows * cols; i < count; i++) {\n    const entity = rootEntity.createChild();\n    const renderer = entity.addComponent(MeshRenderer);\n    const material = new PBRMaterial(engine);\n    const currentRow = Math.floor(i / cols);\n    const currentCol = i % cols;\n\n    renderer.mesh = mesh;\n    renderer.setMaterial(material);\n    entity.transform.setPosition(minX + currentCol * deltaGap, maxY - currentRow * deltaGap, 0);\n\n    // pbr metallic\n    material.metallicFactor = 1 - deltaMetal * currentRow;\n\n    // pbr roughness\n    material.roughnessFactor = deltaRoughness * currentCol;\n\n    // base color\n    if (currentRow === 0) {\n      material.baseColor.setValue(186 / 255, 110 / 255, 64 / 255, 1.0);\n    } else if (currentRow === rows - 1) {\n      material.baseColor.setValue(0, 0, 0, 1);\n    }\n  }\n}\n\nconst gui = new dat.GUI();\nconst guiDebug = {\n  env: \"forrest\",\n  introX: \"从左到右粗糙度递增\",\n  introY: \"从上到下金属度递减\"\n};\ngui.add(guiDebug, \"introX\");\ngui.add(guiDebug, \"introY\");\n\n// create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 20);\ncameraEntity.addComponent(Camera);\nconst control = cameraEntity.addComponent(OrbitControl);\ncontrol.maxDistance = 20;\ncontrol.minDistance = 2;\n\n// create skybox\nconst skybox = rootEntity.addComponent(SkyBox);\n\n// create env light\nconst envLight = rootEntity.addComponent(EnvironmentMapLight);\n\n// load env texture\nengine.resourceManager\n  .load([\n    {\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    },\n    {\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*4ebgQaWOLaIAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*i56eR6AbreUAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*3wYERKsel5oAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*YiG7Srwmb3QAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*VUUwQrAv47sAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Dn2qSoqzfwoAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    },\n    {\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    }\n  ])\n  .then((cubeMaps: TextureCubeMap[]) => {\n    envLight.diffuseTexture = cubeMaps[0];\n    envLight.specularTexture = cubeMaps[1];\n    skybox.skyBoxMap = cubeMaps[1];\n\n    gui.add(guiDebug, \"env\", [\"forrest\", \"road\"]).onChange((v) => {\n      switch (v) {\n        case \"forrest\":\n          envLight.specularTexture = cubeMaps[1];\n          skybox.skyBoxMap = cubeMaps[1];\n          break;\n        case \"road\":\n          envLight.specularTexture = cubeMaps[2];\n          skybox.skyBoxMap = cubeMaps[2];\n          break;\n      }\n    });\n  });\n\n// run engine\nengine.run();\n\n// show pbr materials\nusePBR();\n","formatedCode":"<span class=\"token comment\">/**\n * @title PBR Base\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> EnvironmentMapLight<span class=\"token punctuation\">,</span> MeshRenderer<span class=\"token punctuation\">,</span> PBRMaterial<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">,</span> SkyBox<span class=\"token punctuation\">,</span> TextureCubeMap<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * use PBR material\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">usePBR</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rows <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> cols <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> radius <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> gap <span class=\"token operator\">=</span> <span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> deltaGap <span class=\"token operator\">=</span> radius <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> gap<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> minX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>deltaGap <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>cols <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> maxY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>deltaGap <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>rows <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> deltaMetal <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>cols <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> deltaRoughness <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>rows <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// create model mesh</span>\n  <span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// create renderer</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> count <span class=\"token operator\">=</span> rows <span class=\"token operator\">*</span> cols<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PBRMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> currentRow <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">/</span> cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> currentCol <span class=\"token operator\">=</span> i <span class=\"token operator\">%</span> cols<span class=\"token punctuation\">;</span>\n\n    renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n    renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>minX <span class=\"token operator\">+</span> currentCol <span class=\"token operator\">*</span> deltaGap<span class=\"token punctuation\">,</span> maxY <span class=\"token operator\">-</span> currentRow <span class=\"token operator\">*</span> deltaGap<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// pbr metallic</span>\n    material<span class=\"token punctuation\">.</span>metallicFactor <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> deltaMetal <span class=\"token operator\">*</span> currentRow<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// pbr roughness</span>\n    material<span class=\"token punctuation\">.</span>roughnessFactor <span class=\"token operator\">=</span> deltaRoughness <span class=\"token operator\">*</span> currentCol<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// base color</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentRow <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">186</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentRow <span class=\"token operator\">===</span> rows <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> guiDebug <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  env<span class=\"token operator\">:</span> <span class=\"token string\">\"forrest\"</span><span class=\"token punctuation\">,</span>\n  introX<span class=\"token operator\">:</span> <span class=\"token string\">\"从左到右粗糙度递增\"</span><span class=\"token punctuation\">,</span>\n  introY<span class=\"token operator\">:</span> <span class=\"token string\">\"从上到下金属度递减\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\ngui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiDebug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"introX\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiDebug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"introY\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>maxDistance <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>minDistance <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create skybox</span>\n<span class=\"token keyword\">const</span> skybox <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SkyBox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create env light</span>\n<span class=\"token keyword\">const</span> envLight <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>EnvironmentMapLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// load env texture</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*4ebgQaWOLaIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*i56eR6AbreUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*3wYERKsel5oAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*YiG7Srwmb3QAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*VUUwQrAv47sAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Dn2qSoqzfwoAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMaps<span class=\"token operator\">:</span> TextureCubeMap<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    envLight<span class=\"token punctuation\">.</span>diffuseTexture <span class=\"token operator\">=</span> cubeMaps<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    envLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> cubeMaps<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    skybox<span class=\"token punctuation\">.</span>skyBoxMap <span class=\"token operator\">=</span> cubeMaps<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiDebug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"env\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"forrest\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"road\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"forrest\"</span><span class=\"token operator\">:</span>\n          envLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> cubeMaps<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          skybox<span class=\"token punctuation\">.</span>skyBoxMap <span class=\"token operator\">=</span> cubeMaps<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"road\"</span><span class=\"token operator\">:</span>\n          envLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> cubeMaps<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          skybox<span class=\"token punctuation\">.</span>skyBoxMap <span class=\"token operator\">=</span> cubeMaps<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// run engine</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// show pbr materials</span>\n<span class=\"token function\">usePBR</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\", \"dat.gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"), require(\"dat.gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"], global.dat);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls, dat) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title PBR Helmet\n   * @category Material\n   */\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity();\n\n  var color2glColor = function color2glColor(color) {\n    return new _oasisEngine.Color(color[0] / 255, color[1] / 255, color[2] / 255);\n  };\n\n  var glColor2Color = function glColor2Color(color) {\n    return new _oasisEngine.Color(color[0] * 255, color[1] * 255, color[2] * 255);\n  };\n\n  var gui = new dat.GUI();\n  gui.domElement.style = \"position:absolute;top:0px;left:50vw\";\n  var envLightNode = rootEntity.createChild(\"env_light\");\n  var envLight = envLightNode.addComponent(_oasisEngine.EnvironmentMapLight);\n  var envFolder = gui.addFolder(\"EnvironmentMapLight\");\n  envFolder.add(envLight, \"enabled\");\n  envFolder.add(envLight, \"specularIntensity\", 0, 1);\n  envFolder.add(envLight, \"diffuseIntensity\", 0, 1);\n  var directLightColor = {\n    color: [255, 255, 255]\n  };\n  var directLightNode = rootEntity.createChild(\"dir_light\");\n  var directLight = directLightNode.addComponent(_oasisEngine.DirectLight);\n  directLight.color = new _oasisEngine.Color(1, 1, 1);\n  var dirFolder = gui.addFolder(\"DirectionalLight1\");\n  dirFolder.add(directLight, \"enabled\");\n  dirFolder.addColor(directLightColor, \"color\").onChange(function (v) {\n    return directLight.color = color2glColor(v);\n  });\n  dirFolder.add(directLight, \"intensity\", 0, 1);\n  var ambient = rootEntity.addComponent(_oasisEngine.AmbientLight);\n  ambient.color = new _oasisEngine.Color(0.2, 0.2, 0.2, 1); //-- create camera\n\n  var cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.position = new _oasisEngine.Vector3(0, 0, 5);\n  cameraNode.addComponent(_oasisEngine.Camera);\n  cameraNode.addComponent(_controls.OrbitControl);\n  Promise.all([engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\").then(function (gltf) {\n    rootEntity.addChild(gltf.defaultSceneRoot);\n    console.log(gltf);\n  }), engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }).then(function (cubeMap) {\n    envLight.diffuseTexture = cubeMap;\n  }), engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*4ebgQaWOLaIAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*i56eR6AbreUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*3wYERKsel5oAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*YiG7Srwmb3QAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*VUUwQrAv47sAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Dn2qSoqzfwoAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }).then(function (cubeMap) {\n    envLight.specularTexture = cubeMap;\n    rootEntity.addComponent(_oasisEngine.SkyBox).skyBoxMap = cubeMap;\n  })]).then(function () {\n    engine.run();\n  });\n});"},"name":"pbr-helmet","title":"PBR Helmet","category":"Material","id":"63a71f46-98b5-55ed-bb81-43c6953e6cbe","sourceCode":"/**\n * @title PBR Helmet\n * @category Material\n */\nimport { AmbientLight, AssetType, Camera, Color, DirectLight, EnvironmentMapLight, GLTFResource, SkyBox, TextureCubeMap, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nlet scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\nconst color2glColor = (color) => new Color(color[0] / 255, color[1] / 255, color[2] / 255);\nconst glColor2Color = (color) => new Color(color[0] * 255, color[1] * 255, color[2] * 255);\nconst gui = new dat.GUI();\ngui.domElement.style = \"position:absolute;top:0px;left:50vw\";\n\nlet envLightNode = rootEntity.createChild(\"env_light\");\nlet envLight = envLightNode.addComponent(EnvironmentMapLight);\nlet envFolder = gui.addFolder(\"EnvironmentMapLight\");\nenvFolder.add(envLight, \"enabled\");\nenvFolder.add(envLight, \"specularIntensity\", 0, 1);\nenvFolder.add(envLight, \"diffuseIntensity\", 0, 1);\n\nlet directLightColor = { color: [255, 255, 255] };\nlet directLightNode = rootEntity.createChild(\"dir_light\");\nlet directLight = directLightNode.addComponent(DirectLight);\ndirectLight.color = new Color(1, 1, 1);\nlet dirFolder = gui.addFolder(\"DirectionalLight1\");\ndirFolder.add(directLight, \"enabled\");\ndirFolder.addColor(directLightColor, \"color\").onChange((v) => (directLight.color = color2glColor(v)));\ndirFolder.add(directLight, \"intensity\", 0, 1);\n\nconst ambient = rootEntity.addComponent(AmbientLight);\nambient.color = new Color(0.2, 0.2, 0.2, 1);\n\n//-- create camera\nlet cameraNode = rootEntity.createChild(\"camera_node\");\ncameraNode.transform.position = new Vector3(0, 0, 5);\ncameraNode.addComponent(Camera);\ncameraNode.addComponent(OrbitControl);\n\nPromise.all([\n  engine.resourceManager\n    .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\")\n    .then((gltf) => {\n      rootEntity.addChild(gltf.defaultSceneRoot);\n      console.log(gltf);\n    }),\n  engine.resourceManager\n    .load<TextureCubeMap>({\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    })\n    .then((cubeMap) => {\n      envLight.diffuseTexture = cubeMap;\n    }),\n  engine.resourceManager\n    .load<TextureCubeMap>({\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*4ebgQaWOLaIAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*i56eR6AbreUAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*3wYERKsel5oAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*YiG7Srwmb3QAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*VUUwQrAv47sAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Dn2qSoqzfwoAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    })\n    .then((cubeMap) => {\n      envLight.specularTexture = cubeMap;\n      rootEntity.addComponent(SkyBox).skyBoxMap = cubeMap;\n    })\n]).then(() => {\n  engine.run();\n});\n","formatedCode":"<span class=\"token comment\">/**\n * @title PBR Helmet\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AmbientLight<span class=\"token punctuation\">,</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> EnvironmentMapLight<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> SkyBox<span class=\"token punctuation\">,</span> TextureCubeMap<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">color2glColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">color</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">glColor2Color</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">color</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngui<span class=\"token punctuation\">.</span>domElement<span class=\"token punctuation\">.</span>style <span class=\"token operator\">=</span> <span class=\"token string\">\"position:absolute;top:0px;left:50vw\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> envLightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"env_light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> envLight <span class=\"token operator\">=</span> envLightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>EnvironmentMapLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> envFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EnvironmentMapLight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nenvFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>envLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"enabled\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nenvFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>envLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"specularIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nenvFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>envLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"diffuseIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> directLightColor <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> directLightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dir_light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> directLight <span class=\"token operator\">=</span> directLightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> dirFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DirectionalLight1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>directLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"enabled\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirFolder<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>directLightColor<span class=\"token punctuation\">,</span> <span class=\"token string\">\"color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>directLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token function\">color2glColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>directLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"intensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> ambient <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AmbientLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nambient<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">let</span> cameraNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nPromise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMap</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      envLight<span class=\"token punctuation\">.</span>diffuseTexture <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*4ebgQaWOLaIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*i56eR6AbreUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*3wYERKsel5oAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*YiG7Srwmb3QAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*VUUwQrAv47sAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Dn2qSoqzfwoAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMap</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      envLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n      rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SkyBox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>skyBoxMap <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // Create engine\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 20);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create direct light\n\n  var lightEntity = rootEntity.createChild(\"DirectLight\");\n  var light = lightEntity.addComponent(_oasisEngine.DirectLight);\n  light.intensity = 0.3;\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ArCHTbfVPXUAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    var distanceX = 2.5;\n    var distanceY = 2.5;\n    var position = new _oasisEngine.Vector3(); // Create material\n\n    var material = new _oasisEngine.BlinnPhongMaterial(engine);\n    material.emissiveTexture = texture;\n    material.emissiveColor.setValue(1, 1, 1, 1);\n\n    for (var i = 0; i < 3; i++) {\n      var posX = (i - 1) * distanceX; // Create cuboid\n\n      position.setValue(posX, distanceY * 2.5, 0);\n      generatePrimitiveEntity(rootEntity, \"cuboid\", position, material, _oasisEngine.PrimitiveMesh.createCuboid(engine)); // Create sphere\n\n      position.setValue(posX, distanceY * 1.5, 0);\n      generatePrimitiveEntity(rootEntity, \"sphere\", position, material, _oasisEngine.PrimitiveMesh.createSphere(engine)); // Create plane\n\n      position.setValue(posX, distanceY * 0.5, 0);\n      generatePrimitiveEntity(rootEntity, \"plane\", position, material, _oasisEngine.PrimitiveMesh.createPlane(engine)); // Create cylinder\n\n      position.setValue(posX, -distanceY * 0.5, 0);\n      generatePrimitiveEntity(rootEntity, \"cylinder\", position, material, _oasisEngine.PrimitiveMesh.createCylinder(engine)); // Create cone\n\n      position.setValue(posX, -distanceY * 1.5, 0);\n      generatePrimitiveEntity(rootEntity, \"cone\", position, material, _oasisEngine.PrimitiveMesh.createCone(engine)); // Create turos\n\n      position.setValue(posX, -distanceY * 2.5, 0);\n      generatePrimitiveEntity(rootEntity, \"torus\", position, material, _oasisEngine.PrimitiveMesh.createTorus(engine));\n    }\n  }); // Run engine\n\n  engine.run();\n  /**\n   * generate primitive mesh entity.\n   */\n\n  function generatePrimitiveEntity(rootEntity, name, position, material, mesh) {\n    var entity = rootEntity.createChild(name);\n    entity.transform.setPosition(position.x, position.y, position.z);\n    entity.addComponent(RotateScript);\n    var renderer = entity.addComponent(_oasisEngine.MeshRenderer);\n    renderer.mesh = mesh;\n    renderer.setMaterial(material);\n    return entity;\n  }\n  /**\n   * Script for rotate.\n   */\n\n\n  var RotateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(RotateScript, _Script);\n\n    function RotateScript() {\n      return _Script.apply(this, arguments) || this;\n    }\n\n    var _proto = RotateScript.prototype;\n\n    /**\n     * @override\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      this.entity.transform.rotate(0.5, 0.6, 0);\n    };\n\n    return RotateScript;\n  }(_oasisEngine.Script);\n});"},"name":"primitive-mesh","title":"Primitive Mesh","category":"Mesh","id":"8e4fd869-fa04-582d-8e7b-04c66a649199","sourceCode":"/**\n * @title Primitive Mesh\n * @category Mesh\n */\nimport { AssetType, BlinnPhongMaterial, Camera, DirectLight, Entity, Material, MeshRenderer, ModelMesh, PrimitiveMesh, Script, Texture2D, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\n// Create engine\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 20);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create direct light\nconst lightEntity = rootEntity.createChild(\"DirectLight\");\nconst light = lightEntity.addComponent(DirectLight);\nlight.intensity = 0.3;\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ArCHTbfVPXUAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    const distanceX = 2.5;\n    const distanceY = 2.5;\n    const position = new Vector3();\n\n    // Create material\n    const material = new BlinnPhongMaterial(engine);\n    material.emissiveTexture = texture;\n    material.emissiveColor.setValue(1, 1, 1, 1);\n\n    for (let i = 0; i < 3; i++) {\n      const posX = (i - 1) * distanceX;\n\n      // Create cuboid\n      position.setValue(posX, distanceY * 2.5, 0);\n      generatePrimitiveEntity(rootEntity, \"cuboid\", position, material, PrimitiveMesh.createCuboid(engine));\n\n      // Create sphere\n      position.setValue(posX, distanceY * 1.5, 0);\n      generatePrimitiveEntity(rootEntity, \"sphere\", position, material, PrimitiveMesh.createSphere(engine));\n\n      // Create plane\n      position.setValue(posX, distanceY * 0.5, 0);\n      generatePrimitiveEntity(rootEntity, \"plane\", position, material, PrimitiveMesh.createPlane(engine));\n\n      // Create cylinder\n      position.setValue(posX, -distanceY * 0.5, 0);\n      generatePrimitiveEntity(rootEntity, \"cylinder\", position, material, PrimitiveMesh.createCylinder(engine));\n\n      // Create cone\n      position.setValue(posX, -distanceY * 1.5, 0);\n      generatePrimitiveEntity(rootEntity, \"cone\", position, material, PrimitiveMesh.createCone(engine));\n\n      // Create turos\n      position.setValue(posX, -distanceY * 2.5, 0);\n      generatePrimitiveEntity(rootEntity, \"torus\", position, material, PrimitiveMesh.createTorus(engine));\n    }\n  });\n\n  // Run engine\n  engine.run();\n\n/**\n * generate primitive mesh entity.\n */\nfunction generatePrimitiveEntity(\n  rootEntity: Entity,\n  name: string,\n  position: Vector3,\n  material: Material,\n  mesh: ModelMesh\n): Entity {\n  const entity = rootEntity.createChild(name);\n  entity.transform.setPosition(position.x, position.y, position.z);\n  entity.addComponent(RotateScript);\n  const renderer = entity.addComponent(MeshRenderer);\n  renderer.mesh = mesh;\n  renderer.setMaterial(material);\n\n  return entity;\n}\n\n/**\n * Script for rotate.\n */\nclass RotateScript extends Script {\n  /**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    this.entity.transform.rotate(0.5, 0.6, 0);\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Primitive Mesh\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> BlinnPhongMaterial<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> Material<span class=\"token punctuation\">,</span> MeshRenderer<span class=\"token punctuation\">,</span> ModelMesh<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create direct light</span>\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DirectLight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> light <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ArCHTbfVPXUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> distanceX <span class=\"token operator\">=</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> distanceY <span class=\"token operator\">=</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create material</span>\n    <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>emissiveTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>emissiveColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> posX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> distanceX<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create cuboid</span>\n      position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> distanceY <span class=\"token operator\">*</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cuboid\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create sphere</span>\n      position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> distanceY <span class=\"token operator\">*</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sphere\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create plane</span>\n      position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> distanceY <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"plane\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create cylinder</span>\n      position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>distanceY <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cylinder\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCylinder</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create cone</span>\n      position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>distanceY <span class=\"token operator\">*</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cone\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCone</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create turos</span>\n      position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>distanceY <span class=\"token operator\">*</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"torus\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createTorus</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Run engine</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * generate primitive mesh entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">rootEntity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span>\n  position<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span>\n  material<span class=\"token operator\">:</span> Material<span class=\"token punctuation\">,</span>\n  mesh<span class=\"token operator\">:</span> ModelMesh</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Entity <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>RotateScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> entity<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Script for rotate.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RotateScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\", \"dat.gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"), require(\"dat.gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"], global.dat);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls, dat) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var control = cameraEntity.addComponent(_controls.FreeControl);\n  control.movementSpeed = 50;\n  engine.run(); // create two renderer\n\n  var cube = rootEntity.createChild(\"cube1\");\n  var cube2 = rootEntity.createChild(\"cube2\");\n  cube.transform.position = new _oasisEngine.Vector3(-10, 0, 0);\n  cube2.transform.position = new _oasisEngine.Vector3(10, 0, 0);\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  material.emissiveColor = new _oasisEngine.Color(1, 0, 0, 1);\n  var material2 = new _oasisEngine.BlinnPhongMaterial(engine);\n  material2.emissiveColor = new _oasisEngine.Color(0, 0, 1, 1);\n\n  var geometry = _oasisEngine.PrimitiveMesh.createCuboid(engine, 5, 5, 5);\n\n  var sphereGeometry = _oasisEngine.PrimitiveMesh.createSphere(engine, 5);\n\n  var cubeRenderer = cube.addComponent(_oasisEngine.MeshRenderer);\n  var cubeRenderer2 = cube2.addComponent(_oasisEngine.MeshRenderer);\n  cubeRenderer.mesh = geometry;\n  cubeRenderer.setMaterial(material);\n  cubeRenderer2.mesh = sphereGeometry;\n  cubeRenderer2.setMaterial(material2); // rotate\n\n  var RotationScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(RotationScript, _Script);\n\n    function RotationScript() {\n      return _Script.apply(this, arguments) || this;\n    }\n\n    var _proto = RotationScript.prototype;\n\n    _proto.onUpdate = function onUpdate() {\n      this.entity.transform.rotate(1, 1, 1);\n    };\n\n    return RotationScript;\n  }(_oasisEngine.Script);\n\n  cube.addComponent(RotationScript);\n  cube2.addComponent(RotationScript); // observe renderer-cull\n\n  var state = {\n    cube1: \"正常渲染\",\n    cube2: \"正常渲染\"\n  };\n\n  var ObserverScript = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(ObserverScript, _Script2);\n\n    function ObserverScript() {\n      return _Script2.apply(this, arguments) || this;\n    }\n\n    var _proto2 = ObserverScript.prototype;\n\n    _proto2.onUpdate = function onUpdate() {\n      state.cube1 = cubeRenderer.isCulled ? \"视锥体裁剪\" : \"正常渲染\";\n      state.cube2 = cubeRenderer2.isCulled ? \"视锥体裁剪\" : \"正常渲染\";\n    };\n\n    return ObserverScript;\n  }(_oasisEngine.Script);\n\n  rootEntity.addComponent(ObserverScript);\n  var gui = new dat.GUI();\n  var folder = gui.addFolder(\"移动视角，观察视锥体裁剪情况\");\n  folder.add(state, \"cube1\").name(\"红色立方体\").listen();\n  folder.add(state, \"cube2\").name(\"蓝色球体\").listen();\n  folder.open();\n});"},"name":"renderer-cull","title":"Renderer Cull","category":"Camera","id":"ba51acd0-afdd-54e1-86f3-435e276b5be2","sourceCode":"/**\n * @title Renderer Cull\n * @category Camera\n */\nimport { BlinnPhongMaterial, Camera, Color, MeshRenderer, PrimitiveMesh, Script, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { FreeControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\n\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\nconst control = cameraEntity.addComponent(FreeControl);\ncontrol.movementSpeed = 50;\n\nengine.run();\n\n// create two renderer\nconst cube = rootEntity.createChild(\"cube1\");\nconst cube2 = rootEntity.createChild(\"cube2\");\ncube.transform.position = new Vector3(-10, 0, 0);\ncube2.transform.position = new Vector3(10, 0, 0);\nconst material = new BlinnPhongMaterial(engine);\nmaterial.emissiveColor = new Color(1, 0, 0, 1);\nconst material2 = new BlinnPhongMaterial(engine);\nmaterial2.emissiveColor = new Color(0, 0, 1, 1);\nconst geometry = PrimitiveMesh.createCuboid(engine, 5, 5, 5);\nconst sphereGeometry = PrimitiveMesh.createSphere(engine, 5);\n\nconst cubeRenderer = cube.addComponent(MeshRenderer);\nconst cubeRenderer2 = cube2.addComponent(MeshRenderer);\n\ncubeRenderer.mesh = geometry;\ncubeRenderer.setMaterial(material);\n\ncubeRenderer2.mesh = sphereGeometry;\ncubeRenderer2.setMaterial(material2);\n\n// rotate\nclass RotationScript extends Script {\n  onUpdate() {\n    this.entity.transform.rotate(1, 1, 1);\n  }\n}\ncube.addComponent(RotationScript);\ncube2.addComponent(RotationScript);\n\n// observe renderer-cull\nconst state = {\n  cube1: \"正常渲染\",\n  cube2: \"正常渲染\"\n};\n\nclass ObserverScript extends Script {\n  onUpdate() {\n    state.cube1 = cubeRenderer.isCulled ? \"视锥体裁剪\" : \"正常渲染\";\n    state.cube2 = cubeRenderer2.isCulled ? \"视锥体裁剪\" : \"正常渲染\";\n  }\n}\n\nrootEntity.addComponent(ObserverScript);\n\nconst gui = new dat.GUI();\nconst folder = gui.addFolder(\"移动视角，观察视锥体裁剪情况\");\nfolder.add(state, \"cube1\").name(\"红色立方体\").listen();\nfolder.add(state, \"cube2\").name(\"蓝色球体\").listen();\nfolder.open();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Renderer Cull\n * @category Camera\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BlinnPhongMaterial<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> MeshRenderer<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FreeControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>FreeControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>movementSpeed <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create two renderer</span>\n<span class=\"token keyword\">const</span> cube <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cube2 <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>emissiveColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial2<span class=\"token punctuation\">.</span>emissiveColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> geometry <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sphereGeometry <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cubeRenderer <span class=\"token operator\">=</span> cube<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cubeRenderer2 <span class=\"token operator\">=</span> cube2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> geometry<span class=\"token punctuation\">;</span>\ncubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncubeRenderer2<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> sphereGeometry<span class=\"token punctuation\">;</span>\ncubeRenderer2<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// rotate</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RotationScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\ncube<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>RotationScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>RotationScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// observe renderer-cull</span>\n<span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  cube1<span class=\"token operator\">:</span> <span class=\"token string\">\"正常渲染\"</span><span class=\"token punctuation\">,</span>\n  cube2<span class=\"token operator\">:</span> <span class=\"token string\">\"正常渲染\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ObserverScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    state<span class=\"token punctuation\">.</span>cube1 <span class=\"token operator\">=</span> cubeRenderer<span class=\"token punctuation\">.</span>isCulled <span class=\"token operator\">?</span> <span class=\"token string\">\"视锥体裁剪\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"正常渲染\"</span><span class=\"token punctuation\">;</span>\n    state<span class=\"token punctuation\">.</span>cube2 <span class=\"token operator\">=</span> cubeRenderer2<span class=\"token punctuation\">.</span>isCulled <span class=\"token operator\">?</span> <span class=\"token string\">\"视锥体裁剪\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"正常渲染\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nrootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ObserverScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> folder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"移动视角，观察视锥体裁剪情况\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cube1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"红色立方体\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cube2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"蓝色球体\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  /**\n   * @title Skeleton Animation\n   * @category Animation\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 1, 3);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl).target = new _oasisEngine.Vector3(0, 1, 0);\n  var lightNode = rootEntity.createChild(\"light_node\");\n  rootEntity.addComponent(_oasisEngine.EnvironmentMapLight);\n  lightNode.addComponent(_oasisEngine.DirectLight).intensity = 0.6;\n  lightNode.transform.lookAt(new _oasisEngine.Vector3(0, 0, 1));\n  lightNode.transform.rotate(new _oasisEngine.Vector3(0, 90, 0));\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/basement_prod/aa318303-d7c9-4cb8-8c5a-9cf3855fd1e6.gltf\").then(function (asset) {\n    var animations = asset.animations,\n        defaultSceneRoot = asset.defaultSceneRoot;\n    rootEntity.addChild(defaultSceneRoot);\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animation);\n    animator.playAnimationClip(animations[0].name);\n  });\n  engine.run();\n});"},"name":"skeleton-animation","title":"Skeleton Animation","category":"Animation","id":"9bc1db50-5063-59ee-ac97-4ec093b8d8e6","sourceCode":"/**\n * @title Skeleton Animation\n * @category Animation\n */\nimport { Animation, Camera, DirectLight, EnvironmentMapLight, GLTFResource, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\ncameraEntity.transform.position = new Vector3(0, 1, 3);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl).target = new Vector3(0, 1, 0);\n\nconst lightNode = rootEntity.createChild(\"light_node\");\nrootEntity.addComponent(EnvironmentMapLight);\nlightNode.addComponent(DirectLight).intensity = 0.6;\nlightNode.transform.lookAt(new Vector3(0, 0, 1));\nlightNode.transform.rotate(new Vector3(0, 90, 0));\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/basement_prod/aa318303-d7c9-4cb8-8c5a-9cf3855fd1e6.gltf\")\n  .then((asset) => {\n    const { animations, defaultSceneRoot } = asset;\n    rootEntity.addChild(defaultSceneRoot);\n\n    const animator = defaultSceneRoot.getComponent(Animation);\n    animator.playAnimationClip(animations[0].name);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Skeleton Animation\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Animation<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> EnvironmentMapLight<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>EnvironmentMapLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/basement_prod/aa318303-d7c9-4cb8-8c5a-9cf3855fd1e6.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">playAnimationClip</span><span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\", \"@oasis-engine/engine-spine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"), require(\"@oasis-engine/engine-spine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"], global.oasisSpine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls, _engineSpine) {\n  \"use strict\";\n\n  /**\n   * @title Spine Renderer\n   * @category 2D\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 70);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\", \"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\", \"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"],\n    type: \"spine\"\n  }).then(function (spineEntity) {\n    spineEntity.transform.setPosition(0, -12, 0);\n    rootEntity.addChild(spineEntity);\n    var spineAnimation = spineEntity.getComponent(_engineSpine.SpineAnimation);\n    spineAnimation.state.setAnimation(0, \"walk\", true);\n    spineAnimation.skeleton.scaleX = 0.05;\n    spineAnimation.skeleton.scaleY = 0.05;\n  });\n  engine.run();\n});"},"name":"spine","title":"Spine Renderer","category":"2D","id":"cdec3ab9-36ea-5799-b34d-225787b3085b","sourceCode":"/**\n * @title Spine Renderer\n * @category 2D\n */\nimport { Camera, Vector3, WebGLEngine, Entity } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { SpineAnimation } from \"@oasis-engine/engine-spine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\ncameraEntity.addComponent(Camera);\ncameraEntity.transform.position = new Vector3(0, 0, 70);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load({\n    urls: [ \n      \"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\",\n      \"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\",\n      \"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"\n    ],\n    type: \"spine\"\n  })\n  .then((spineEntity: Entity) => {\n    spineEntity.transform.setPosition(0, -12, 0);\n    rootEntity.addChild(spineEntity);\n    const spineAnimation = spineEntity.getComponent(SpineAnimation);\n    spineAnimation.state.setAnimation(0, \"walk\", true);\n    spineAnimation.skeleton.scaleX = 0.05;\n    spineAnimation.skeleton.scaleY = 0.05;\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Spine Renderer\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine<span class=\"token punctuation\">,</span> Entity <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SpineAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/engine-spine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"spine\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">spineEntity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    spineEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>spineEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spineAnimation <span class=\"token operator\">=</span> spineEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpineAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">setAnimation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"walk\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>skeleton<span class=\"token punctuation\">.</span>scaleX <span class=\"token operator\">=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>skeleton<span class=\"token punctuation\">.</span>scaleY <span class=\"token operator\">=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var target = new _oasisEngine.Vector3(0, -3, 0);\n  var up = new _oasisEngine.Vector3(0, 1, 0);\n\n  var Move = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(Move, _Script);\n\n    function Move(node) {\n      var _this;\n\n      _this = _Script.call(this, node) || this;\n      _this.time = 0;\n      _this.y = 3;\n      _this.range = 5;\n      return _this;\n    }\n\n    var _proto = Move.prototype;\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      this.time += deltaTime / 1000;\n      var x = Math.cos(this.time) * this.range;\n      var y = Math.sin(this.time) * this.range * 0.2 + this.y;\n      var z = Math.cos(this.time) * this.range;\n      this.entity.transform.position = new _oasisEngine.Vector3(x, y, z);\n    };\n\n    return Move;\n  }(_oasisEngine.Script); // 控制 light entity 始终看向固定点\n\n\n  var LookAtFocus = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(LookAtFocus, _Script2);\n\n    function LookAtFocus() {\n      return _Script2.apply(this, arguments) || this;\n    }\n\n    var _proto2 = LookAtFocus.prototype;\n\n    _proto2.onUpdate = function onUpdate(deltaTime) {\n      light1.transform.lookAt(target, up);\n    };\n\n    return LookAtFocus;\n  }(_oasisEngine.Script); //-- create engine object\n\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Logger.enable();\n\n  function createCuboidGeometry(name, position, rotation, w, h, d, castShadow) {\n    if (castShadow === void 0) {\n      castShadow = false;\n    }\n\n    var obj = rootEntity.createChild(name);\n    obj.position = _construct(_oasisEngine.Vector3, position);\n    obj.transform.rotation = new _oasisEngine.Vector3(rotation[0], rotation[0], rotation[0]);\n    var cubeRenderer = obj.addComponent(_oasisEngine.MeshRenderer);\n    cubeRenderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(rootEntity.engine, w, h, d);\n    cubeRenderer.setMaterial(mtl);\n    cubeRenderer[\"recieveShadow\"] = !castShadow;\n    cubeRenderer[\"castShadow\"] = castShadow;\n  }\n\n  var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n  mtl.baseColor = new _oasisEngine.Color(0.1, 0.9, 0.8, 1); //-- create light entity\n\n  var lighthouse = rootEntity.createChild(\"lighthouse\");\n  var light1 = lighthouse.createChild(\"light1\");\n  light1.addComponent(Move);\n  light1.addComponent(LookAtFocus);\n  var spotLight = light1.addComponent(_oasisEngine.SpotLight);\n  spotLight.angle = Math.PI / 12;\n  spotLight.penumbra = 2;\n  spotLight[\"enableShadow\"] = true;\n  spotLight[\"shadow\"].bias = 0.0001;\n  spotLight[\"shadow\"].intensity = 0.2;\n  var sphereRenderer3 = light1.addComponent(_oasisEngine.MeshRenderer);\n  sphereRenderer3.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, 0.1);\n  sphereRenderer3.setMaterial(mtl); //-- create geometry\n\n  createCuboidGeometry(\"cubiod1\", [0, -3, 0], [0, 0, 0], 10, 0.1, 10);\n  createCuboidGeometry(\"cubiod2\", [5, -2, 0], [0, 0, 0], 0.1, 2, 10);\n  createCuboidGeometry(\"cubiod3\", [-5, -2, 0], [0, 0, 0], 0.1, 2, 10);\n  createCuboidGeometry(\"cubiod4\", [0, -2, -5], [0, 0, 0], 10, 2, 0.1);\n  createCuboidGeometry(\"cubiod-cast-shadow\", [0, -1, 0], [0, 0, 0], 1, 1, 1, true); //-- create camera\n\n  var cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.position = new _oasisEngine.Vector3(0, 5, 17);\n  cameraNode.transform.lookAt(new _oasisEngine.Vector3(), new _oasisEngine.Vector3(0, 1, 0));\n  cameraNode.addComponent(_oasisEngine.Camera);\n  cameraNode.addComponent(_controls.OrbitControl); //-- run\n\n  engine.run();\n});"},"name":"spotlight","title":"Spot Light","category":"Light","id":"34dd2e6c-9459-53bb-bca8-3636d9ce1d17","sourceCode":"/**\n * @title Spot Light\n * @category Light\n */\nimport { BlinnPhongMaterial, Camera, Color, MeshRenderer, PrimitiveMesh, Script, SpotLight, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\nconst target = new Vector3(0, -3, 0);\nconst up = new Vector3(0, 1, 0);\nclass Move extends Script {\n  time = 0;\n  y = 3;\n  range = 5;\n\n  constructor(node) {\n    super(node);\n  }\n\n  onUpdate(deltaTime) {\n    this.time += deltaTime / 1000;\n    let x = Math.cos(this.time) * this.range;\n    let y = Math.sin(this.time) * this.range * 0.2 + this.y;\n    let z = Math.cos(this.time) * this.range;\n    this.entity.transform.position = new Vector3(x, y, z);\n  }\n}\n\n// 控制 light entity 始终看向固定点\nclass LookAtFocus extends Script {\n  onUpdate(deltaTime) {\n    light1.transform.lookAt(target, up);\n  }\n}\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Logger.enable();\nfunction createCuboidGeometry(name, position, rotation, w, h, d, castShadow: boolean = false) {\n  let obj = rootEntity.createChild(name);\n  obj.position = new Vector3(...position);\n  obj.transform.rotation = new Vector3(rotation[0], rotation[0], rotation[0]);\n  let cubeRenderer = obj.addComponent(MeshRenderer);\n  cubeRenderer.mesh = PrimitiveMesh.createCuboid(rootEntity.engine, w, h, d);\n  cubeRenderer.setMaterial(mtl);\n  cubeRenderer[\"recieveShadow\"] = !castShadow;\n  cubeRenderer[\"castShadow\"] = castShadow;\n}\n\nlet mtl = new BlinnPhongMaterial(engine);\nmtl.baseColor = new Color(0.1, 0.9, 0.8, 1);\n//-- create light entity\nlet lighthouse = rootEntity.createChild(\"lighthouse\");\nlet light1 = lighthouse.createChild(\"light1\");\nlight1.addComponent(Move);\nlight1.addComponent(LookAtFocus);\n\nlet spotLight = light1.addComponent(SpotLight);\nspotLight.angle = Math.PI / 12;\nspotLight.penumbra = 2;\nspotLight[\"enableShadow\"] = true;\nspotLight[\"shadow\"].bias = 0.0001;\nspotLight[\"shadow\"].intensity = 0.2;\n\nlet sphereRenderer3 = light1.addComponent(MeshRenderer);\nsphereRenderer3.mesh = PrimitiveMesh.createSphere(engine, 0.1);\nsphereRenderer3.setMaterial(mtl);\n\n//-- create geometry\ncreateCuboidGeometry(\"cubiod1\", [0, -3, 0], [0, 0, 0], 10, 0.1, 10);\ncreateCuboidGeometry(\"cubiod2\", [5, -2, 0], [0, 0, 0], 0.1, 2, 10);\ncreateCuboidGeometry(\"cubiod3\", [-5, -2, 0], [0, 0, 0], 0.1, 2, 10);\ncreateCuboidGeometry(\"cubiod4\", [0, -2, -5], [0, 0, 0], 10, 2, 0.1);\ncreateCuboidGeometry(\"cubiod-cast-shadow\", [0, -1, 0], [0, 0, 0], 1, 1, 1, true);\n\n//-- create camera\nlet cameraNode = rootEntity.createChild(\"camera_node\");\ncameraNode.transform.position = new Vector3(0, 5, 17);\ncameraNode.transform.lookAt(new Vector3(), new Vector3(0, 1, 0));\ncameraNode.addComponent(Camera);\ncameraNode.addComponent(OrbitControl);\n\n//-- run\nengine.run();","formatedCode":"<span class=\"token comment\">/**\n * @title Spot Light\n * @category Light\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BlinnPhongMaterial<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> MeshRenderer<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> SpotLight<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> up <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Move</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  time <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  y <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  range <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deltaTime</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time <span class=\"token operator\">+=</span> deltaTime <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>range<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>range <span class=\"token operator\">*</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> z <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>range<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 控制 light entity 始终看向固定点</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LookAtFocus</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deltaTime</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    light1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> up<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Logger.enable();</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> rotation<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> castShadow<span class=\"token operator\">:</span> boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  obj<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  obj<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span>rotation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rotation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rotation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> cubeRenderer <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">[</span><span class=\"token string\">\"recieveShadow\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>castShadow<span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">[</span><span class=\"token string\">\"castShadow\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> castShadow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> mtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmtl<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//-- create light entity</span>\n<span class=\"token keyword\">let</span> lighthouse <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lighthouse\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> light1 <span class=\"token operator\">=</span> lighthouse<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Move<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>LookAtFocus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> spotLight <span class=\"token operator\">=</span> light1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpotLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">.</span>angle <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">.</span>penumbra <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">[</span><span class=\"token string\">\"enableShadow\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">[</span><span class=\"token string\">\"shadow\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token number\">0.0001</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">[</span><span class=\"token string\">\"shadow\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> sphereRenderer3 <span class=\"token operator\">=</span> light1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereRenderer3<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereRenderer3<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create geometry</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod1\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod2\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod3\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod4\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod-cast-shadow\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">let</span> cameraNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- run</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Color\n   * @category 2D\n   */\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var spriteEntity = new _oasisEngine.Entity(engine, \"spriteColor\");\n    var spriteRenderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n    spriteRenderer.sprite = new _oasisEngine.Sprite(engine, texture);\n    var color = new _oasisEngine.Color(); // Display normal\n\n    addColorEntity(spriteEntity, -20, color.setValue(1, 1, 1, 1)); // Display red\n\n    addColorEntity(spriteEntity.clone(), -10, color.setValue(1, 0, 0, 1)); // Display green\n\n    addColorEntity(spriteEntity.clone(), 0, color.setValue(0, 1, 0, 1)); // Display blue\n\n    addColorEntity(spriteEntity.clone(), 10, color.setValue(0, 0, 1, 1)); // Display alpha\n\n    addColorEntity(spriteEntity.clone(), 20, color.setValue(1, 1, 1, 0.2));\n  });\n  engine.run();\n\n  function addColorEntity(entity, posX, color) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(posX, 0, 0);\n    entity.getComponent(_oasisEngine.SpriteRenderer).color = color;\n  }\n});"},"name":"sprite-color","title":"Sprite Color","category":"2D","id":"3308e02a-c63d-551b-b2db-96d43d1f0c6a","sourceCode":"/**\n * @title Sprite Color\n * @category 2D\n */\nimport { AssetType, Camera, Color, Entity, Sprite, SpriteRenderer, Texture2D, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const spriteEntity = new Entity(engine, \"spriteColor\");\n    const spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n    spriteRenderer.sprite = new Sprite(engine, texture);\n    const color = new Color();\n    // Display normal\n    addColorEntity(spriteEntity, -20, color.setValue(1, 1, 1, 1));\n    // Display red\n    addColorEntity(spriteEntity.clone(), -10, color.setValue(1, 0, 0, 1));\n    // Display green\n    addColorEntity(spriteEntity.clone(), 0, color.setValue(0, 1, 0, 1));\n    // Display blue\n    addColorEntity(spriteEntity.clone(), 10, color.setValue(0, 0, 1, 1));\n    // Display alpha\n    addColorEntity(spriteEntity.clone(), 20, color.setValue(1, 1, 1, 0.2));\n  });\n\nengine.run();\n\nfunction addColorEntity(entity: Entity, posX: number, color: Color): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(posX, 0, 0);\n  entity.getComponent(SpriteRenderer).color = color;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Color\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entity</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"spriteColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spriteRenderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display normal</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display red</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display green</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display blue</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display alpha</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> posX<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> Color</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\", \"dat.gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"), require(\"dat.gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"], global.dat);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls, dat) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 15);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var orbitControl = cameraEntity.addComponent(_controls.OrbitControl);\n  orbitControl.minDistance = 15;\n  orbitControl.maxDistance = 15; // 自定义材质\n\n  var vertexSource = \"\\nuniform mat4 u_MVPMat;\\nattribute vec3 POSITION;\\nattribute vec2 TEXCOORD_0;\\nattribute vec3 NORMAL;\\n\\nvarying vec2 v_uv;\\nvarying vec3 v_position;\\nvarying vec3 v_normal;\\n\\n\\nuniform float uTime;\\n\\nuniform sampler2D u_texture;\\n\\nvoid main() {\\n\\n  gl_Position = u_MVPMat  *  vec4( POSITION, 1.0 );\\n  v_uv = TEXCOORD_0;\\n  v_normal = NORMAL;\\n  v_position = POSITION;\\n}\\n \";\n  var fragSource = \"\\nvarying vec2 v_uv;\\nvarying vec3 v_position;\\nvarying vec3 v_normal;\\n\\nuniform float u_time;\\nuniform sampler2D u_texture;\\nuniform vec3 u_cameraPos;\\n\\n#define EPS 0.001\\n#define MAX_ITR 100\\n#define MAX_DIS 100.0\\n#define PI\\t \\t  3.141592\\n\\nuniform float u_water_scale;\\nuniform float u_water_speed;\\n\\nuniform vec3 u_sea_base;\\nuniform vec3 u_water_color;\\nuniform float u_sea_height;\\n\\n// Distance Functions\\nfloat sd_sph(vec3 p, float r) { return length(p) - r; }\\n\\n// Distance Map\\nfloat map(vec3 p, vec2 sc)\\n{    \\n    float l = cos(length(p * 2.0));\\n    vec2 u = vec2(l, sc.y);\\n    vec2 um = u * 0.3;\\n    um.x += u_time * 0.1 * u_water_speed;\\n    um.y += -u_time * 0.025 * u_water_speed;\\n    um.x += (um.y) * 2.0;    \\n    float a1 = texture2D(u_texture, (p.yz  *  .4 + um) * u_water_scale).x;\\n    float a2 = texture2D(u_texture, (p.zx  *  .4 + um) * u_water_scale).x;\\n    float a3 = texture2D(u_texture, (p.xy  *  .4 + um) * u_water_scale).x;\\n    \\n    float t1 = a1 + a2 + a3;\\n    t1 /= 15.0 * u_water_scale;\\n    \\n    float b1 = texture2D(u_texture, (p.yz  *  1. + u) * u_water_scale).x;\\n    float b2 = texture2D(u_texture, (p.zx  *  1. + u) * u_water_scale).x;\\n    float b3 = texture2D(u_texture, (p.xy  *  1. + u) * u_water_scale).x;\\n    \\n    float t2 = b1 + b2 + b3;\\n    t2 /= 15.0  *  u_water_scale;\\n    \\n    float comb = t1 * 0.4 + t2 * 0.1 * (1.0 - t1);\\n    \\n    return comb + sd_sph(p, 3.); // sd_box(p, vec3(1., 1., 1.)) + sdPlane(p, vec4(0., 0., 1.0, 0.));//\\n}\\n\\nfloat diffuse(vec3 n,vec3 l,float p) {\\n    return pow(dot(n,l) * 0.4 + 0.6,p);\\n}\\n\\nfloat specular(vec3 n,vec3 l,vec3 e,float s) {    \\n    float nrm = (s + 8.0) / (PI * 8.0);\\n    return pow(max(dot(reflect(e,n),l),0.0),s) * nrm;\\n}\\n\\n// sky\\nvec3 getSkyColor(vec3 e) {\\n    e.y = max(e.y,0.0);\\n    return vec3(pow(1.0-e.y,2.0), 1.0-e.y, 0.6+(1.0-e.y)*0.4);\\n}\\n\\nvec3 getSeaColor(vec3 p, vec3 n, vec3 l, vec3 eye, vec3 dist) {  \\n    float fresnel = clamp(1.0 - dot(n,-eye), 0.0, 1.0);\\n    fresnel = pow(fresnel,3.0) * 0.65;\\n\\n    vec3 reflected = getSkyColor(reflect(eye,n));    \\n    vec3 refracted = u_sea_base + diffuse(normalize(n),l,80.0) * u_water_color * 0.12; \\n\\n    vec3 color =  mix(refracted,reflected,fresnel);\\n\\n    float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);\\n    color += u_water_color * (length(p) - u_sea_height) * 0.18 * atten; // \\n\\n    color += vec3(specular(n,l,eye,20.0));\\n\\n    return color;\\n}\\n\\nvoid main (void) {\\n\\n    vec2 uv = vec2(v_uv.x * 0.5, v_uv.y * 0.5);//  / iResolution.xy;\\n    \\n    vec3 pos = v_position; \\n    vec3 dist = pos - u_cameraPos;\\n\\n    float dis = EPS;\\n    vec3 rayDir = normalize(dist);\\n    \\n    // Ray marching\\n    for(int i = 0; i < MAX_ITR; i++)\\n    {\\n        if(dis < EPS || dis > MAX_DIS)\\n          break;\\n        dis = map(pos, uv);\\n        pos += dis * rayDir;\\n    }\\n    \\n    if (dis >= EPS) \\n    {\\n      discard;\\n    }\\n    \\n    vec3 lig = normalize(vec3(-1., -3, -4.5));\\n    vec2 eps = vec2(0.0, EPS);\\n    vec3 normal = normalize(vec3(\\n        map(pos + eps.yxx, uv) - map(pos - eps.yxx, uv),\\n        map(pos + eps.xyx, uv) - map(pos - eps.xyx, uv),\\n        map(pos + eps.xxy, uv) - map(pos - eps.xxy, uv)\\n    ));\\n    \\n    vec3 col = getSeaColor(pos, normal, lig, rayDir, dist);\\n    \\n    gl_FragColor = vec4(col,1.0);\\n}\\n\"; // 初始化 shader\n\n  _oasisEngine.Shader.create(\"water\", vertexSource, fragSource);\n\n  var ShaderMaterial = /*#__PURE__*/function (_Material) {\n    _inheritsLoose(ShaderMaterial, _Material);\n\n    function ShaderMaterial(engine) {\n      var _this;\n\n      _this = _Material.call(this, engine, _oasisEngine.Shader.find(\"water\")) || this;\n\n      _this.shaderData.setFloat(\"u_sea_height\", 0.6);\n\n      _this.shaderData.setFloat(\"u_water_scale\", 0.2);\n\n      _this.shaderData.setFloat(\"u_water_speed\", 3.5);\n\n      _this.shaderData.setColor(\"u_sea_base\", new _oasisEngine.Color(0.1, 0.2, 0.22));\n\n      _this.shaderData.setColor(\"u_water_color\", new _oasisEngine.Color(0.8, 0.9, 0.6));\n\n      return _this;\n    }\n\n    return ShaderMaterial;\n  }(_oasisEngine.Material);\n\n  var material = new ShaderMaterial(engine); // 创建球体形的海面\n\n  var sphereEntity = rootEntity.createChild(\"sphere\");\n  var renderer = sphereEntity.addComponent(_oasisEngine.MeshRenderer);\n  renderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, 3, 50);\n  renderer.setMaterial(material); // 加载噪声纹理\n\n  engine.resourceManager.load({\n    type: _oasisEngine.AssetType.Texture2D,\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*AC4IQZ6mfCIAAAAAAAAAAAAAARQnAQ\"\n  }).then(function (texture) {\n    material.shaderData.setTexture(\"u_texture\", texture);\n    engine.run();\n  }); // u_time 更新脚本\n\n  var WaterScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(WaterScript, _Script);\n\n    function WaterScript() {\n      return _Script.apply(this, arguments) || this;\n    }\n\n    var _proto = WaterScript.prototype;\n\n    _proto.onUpdate = function onUpdate() {\n      material.shaderData.setFloat(\"u_time\", engine.time.timeSinceStartup * 0.001);\n    };\n\n    return WaterScript;\n  }(_oasisEngine.Script);\n\n  sphereEntity.addComponent(WaterScript); // debug\n\n  function openDebug() {\n    var shaderData = material.shaderData;\n    var baseColor = shaderData.getColor(\"u_sea_base\");\n    var waterColor = shaderData.getColor(\"u_water_color\");\n    var debug = {\n      sea_height: shaderData.getFloat(\"u_sea_height\"),\n      water_scale: shaderData.getFloat(\"u_water_scale\"),\n      water_speed: shaderData.getFloat(\"u_water_speed\"),\n      sea_base: [baseColor.r * 255, baseColor.g * 255, baseColor.b * 255],\n      water_color: [waterColor.r * 255, waterColor.g * 255, waterColor.b * 255]\n    };\n    var gui = new dat.GUI();\n    gui.add(debug, \"sea_height\", 0, 3).onChange(function (v) {\n      shaderData.setFloat(\"u_sea_height\", v);\n    });\n    gui.add(debug, \"water_scale\", 0, 4).onChange(function (v) {\n      shaderData.setFloat(\"u_water_scale\", v);\n    });\n    gui.add(debug, \"water_speed\", 0, 4).onChange(function (v) {\n      shaderData.setFloat(\"u_water_speed\", v);\n    });\n    gui.addColor(debug, \"sea_base\").onChange(function (v) {\n      baseColor.r = v[0] / 255;\n      baseColor.g = v[1] / 255;\n      baseColor.b = v[2] / 255;\n    });\n    gui.addColor(debug, \"water_color\").onChange(function (v) {\n      waterColor.r = v[0] / 255;\n      waterColor.g = v[1] / 255;\n      waterColor.b = v[2] / 255;\n    });\n  }\n\n  openDebug();\n});"},"name":"shader-water","title":"Water","category":"Shader","id":"aabdd0ba-3e99-5489-8165-3bf52e469877","sourceCode":"/**\n * @title Water\n * @category Shader\n */\nimport { AssetType, Camera, Color, Engine, Material, MeshRenderer, PrimitiveMesh, Script, Shader, Texture2D, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 15);\ncameraEntity.addComponent(Camera);\nconst orbitControl = cameraEntity.addComponent(OrbitControl);\norbitControl.minDistance = 15;\norbitControl.maxDistance = 15;\n\n// 自定义材质\nconst vertexSource = `\nuniform mat4 u_MVPMat;\nattribute vec3 POSITION;\nattribute vec2 TEXCOORD_0;\nattribute vec3 NORMAL;\n\nvarying vec2 v_uv;\nvarying vec3 v_position;\nvarying vec3 v_normal;\n\n\nuniform float uTime;\n\nuniform sampler2D u_texture;\n\nvoid main() {\n\n  gl_Position = u_MVPMat  *  vec4( POSITION, 1.0 );\n  v_uv = TEXCOORD_0;\n  v_normal = NORMAL;\n  v_position = POSITION;\n}\n `;\n\nconst fragSource = `\nvarying vec2 v_uv;\nvarying vec3 v_position;\nvarying vec3 v_normal;\n\nuniform float u_time;\nuniform sampler2D u_texture;\nuniform vec3 u_cameraPos;\n\n#define EPS 0.001\n#define MAX_ITR 100\n#define MAX_DIS 100.0\n#define PI\t \t  3.141592\n\nuniform float u_water_scale;\nuniform float u_water_speed;\n\nuniform vec3 u_sea_base;\nuniform vec3 u_water_color;\nuniform float u_sea_height;\n\n// Distance Functions\nfloat sd_sph(vec3 p, float r) { return length(p) - r; }\n\n// Distance Map\nfloat map(vec3 p, vec2 sc)\n{    \n    float l = cos(length(p * 2.0));\n    vec2 u = vec2(l, sc.y);\n    vec2 um = u * 0.3;\n    um.x += u_time * 0.1 * u_water_speed;\n    um.y += -u_time * 0.025 * u_water_speed;\n    um.x += (um.y) * 2.0;    \n    float a1 = texture2D(u_texture, (p.yz  *  .4 + um) * u_water_scale).x;\n    float a2 = texture2D(u_texture, (p.zx  *  .4 + um) * u_water_scale).x;\n    float a3 = texture2D(u_texture, (p.xy  *  .4 + um) * u_water_scale).x;\n    \n    float t1 = a1 + a2 + a3;\n    t1 /= 15.0 * u_water_scale;\n    \n    float b1 = texture2D(u_texture, (p.yz  *  1. + u) * u_water_scale).x;\n    float b2 = texture2D(u_texture, (p.zx  *  1. + u) * u_water_scale).x;\n    float b3 = texture2D(u_texture, (p.xy  *  1. + u) * u_water_scale).x;\n    \n    float t2 = b1 + b2 + b3;\n    t2 /= 15.0  *  u_water_scale;\n    \n    float comb = t1 * 0.4 + t2 * 0.1 * (1.0 - t1);\n    \n    return comb + sd_sph(p, 3.); // sd_box(p, vec3(1., 1., 1.)) + sdPlane(p, vec4(0., 0., 1.0, 0.));//\n}\n\nfloat diffuse(vec3 n,vec3 l,float p) {\n    return pow(dot(n,l) * 0.4 + 0.6,p);\n}\n\nfloat specular(vec3 n,vec3 l,vec3 e,float s) {    \n    float nrm = (s + 8.0) / (PI * 8.0);\n    return pow(max(dot(reflect(e,n),l),0.0),s) * nrm;\n}\n\n// sky\nvec3 getSkyColor(vec3 e) {\n    e.y = max(e.y,0.0);\n    return vec3(pow(1.0-e.y,2.0), 1.0-e.y, 0.6+(1.0-e.y)*0.4);\n}\n\nvec3 getSeaColor(vec3 p, vec3 n, vec3 l, vec3 eye, vec3 dist) {  \n    float fresnel = clamp(1.0 - dot(n,-eye), 0.0, 1.0);\n    fresnel = pow(fresnel,3.0) * 0.65;\n\n    vec3 reflected = getSkyColor(reflect(eye,n));    \n    vec3 refracted = u_sea_base + diffuse(normalize(n),l,80.0) * u_water_color * 0.12; \n\n    vec3 color =  mix(refracted,reflected,fresnel);\n\n    float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);\n    color += u_water_color * (length(p) - u_sea_height) * 0.18 * atten; // \n\n    color += vec3(specular(n,l,eye,20.0));\n\n    return color;\n}\n\nvoid main (void) {\n\n    vec2 uv = vec2(v_uv.x * 0.5, v_uv.y * 0.5);//  / iResolution.xy;\n    \n    vec3 pos = v_position; \n    vec3 dist = pos - u_cameraPos;\n\n    float dis = EPS;\n    vec3 rayDir = normalize(dist);\n    \n    // Ray marching\n    for(int i = 0; i < MAX_ITR; i++)\n    {\n        if(dis < EPS || dis > MAX_DIS)\n          break;\n        dis = map(pos, uv);\n        pos += dis * rayDir;\n    }\n    \n    if (dis >= EPS) \n    {\n      discard;\n    }\n    \n    vec3 lig = normalize(vec3(-1., -3, -4.5));\n    vec2 eps = vec2(0.0, EPS);\n    vec3 normal = normalize(vec3(\n        map(pos + eps.yxx, uv) - map(pos - eps.yxx, uv),\n        map(pos + eps.xyx, uv) - map(pos - eps.xyx, uv),\n        map(pos + eps.xxy, uv) - map(pos - eps.xxy, uv)\n    ));\n    \n    vec3 col = getSeaColor(pos, normal, lig, rayDir, dist);\n    \n    gl_FragColor = vec4(col,1.0);\n}\n`;\n\n// 初始化 shader\nShader.create(\"water\", vertexSource, fragSource);\n\nclass ShaderMaterial extends Material {\n  constructor(engine: Engine) {\n    super(engine, Shader.find(\"water\"));\n\n    this.shaderData.setFloat(\"u_sea_height\", 0.6);\n    this.shaderData.setFloat(\"u_water_scale\", 0.2);\n    this.shaderData.setFloat(\"u_water_speed\", 3.5);\n    this.shaderData.setColor(\"u_sea_base\", new Color(0.1, 0.2, 0.22));\n    this.shaderData.setColor(\"u_water_color\", new Color(0.8, 0.9, 0.6));\n  }\n}\nconst material = new ShaderMaterial(engine);\n\n// 创建球体形的海面\nconst sphereEntity = rootEntity.createChild(\"sphere\");\nconst renderer = sphereEntity.addComponent(MeshRenderer);\nrenderer.mesh = PrimitiveMesh.createSphere(engine, 3, 50);\nrenderer.setMaterial(material);\n\n// 加载噪声纹理\nengine.resourceManager\n  .load({\n    type: AssetType.Texture2D,\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*AC4IQZ6mfCIAAAAAAAAAAAAAARQnAQ\"\n  })\n  .then((texture: Texture2D) => {\n    material.shaderData.setTexture(\"u_texture\", texture);\n    engine.run();\n  });\n\n// u_time 更新脚本\nclass WaterScript extends Script {\n  onUpdate() {\n    material.shaderData.setFloat(\"u_time\", engine.time.timeSinceStartup * 0.001);\n  }\n}\nsphereEntity.addComponent(WaterScript);\n\n\n// debug\nfunction openDebug() {\n  const shaderData = material.shaderData;\n  const baseColor = shaderData.getColor(\"u_sea_base\");\n  const waterColor = shaderData.getColor(\"u_water_color\");\n  const debug = {\n    sea_height: shaderData.getFloat(\"u_sea_height\"),\n    water_scale: shaderData.getFloat(\"u_water_scale\"),\n    water_speed: shaderData.getFloat(\"u_water_speed\"),\n    sea_base: [baseColor.r * 255, baseColor.g * 255, baseColor.b * 255],\n    water_color: [waterColor.r * 255, waterColor.g * 255, waterColor.b * 255]\n  };\n\n  const gui = new dat.GUI();\n\n  gui.add(debug, \"sea_height\", 0, 3).onChange((v) => {\n    shaderData.setFloat(\"u_sea_height\", v);\n  });\n  gui.add(debug, \"water_scale\", 0, 4).onChange((v) => {\n    shaderData.setFloat(\"u_water_scale\", v);\n  });\n  gui.add(debug, \"water_speed\", 0, 4).onChange((v) => {\n    shaderData.setFloat(\"u_water_speed\", v);\n  });\n  gui.addColor(debug, \"sea_base\").onChange((v) => {\n    baseColor.r = v[0] / 255;\n    baseColor.g = v[1] / 255;\n    baseColor.b = v[2] / 255;\n  });\n  gui.addColor(debug, \"water_color\").onChange((v) => {\n    waterColor.r = v[0] / 255;\n    waterColor.g = v[1] / 255;\n    waterColor.b = v[2] / 255;\n  });\n}\n\nopenDebug();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Water\n * @category Shader\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> Engine<span class=\"token punctuation\">,</span> Material<span class=\"token punctuation\">,</span> MeshRenderer<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> orbitControl <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\norbitControl<span class=\"token punctuation\">.</span>minDistance <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\norbitControl<span class=\"token punctuation\">.</span>maxDistance <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 自定义材质</span>\n<span class=\"token keyword\">const</span> vertexSource <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\nuniform mat4 u_MVPMat;\nattribute vec3 POSITION;\nattribute vec2 TEXCOORD_0;\nattribute vec3 NORMAL;\n\nvarying vec2 v_uv;\nvarying vec3 v_position;\nvarying vec3 v_normal;\n\n\nuniform float uTime;\n\nuniform sampler2D u_texture;\n\nvoid main() {\n\n  gl_Position = u_MVPMat  *  vec4( POSITION, 1.0 );\n  v_uv = TEXCOORD_0;\n  v_normal = NORMAL;\n  v_position = POSITION;\n}\n </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fragSource <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\nvarying vec2 v_uv;\nvarying vec3 v_position;\nvarying vec3 v_normal;\n\nuniform float u_time;\nuniform sampler2D u_texture;\nuniform vec3 u_cameraPos;\n\n#define EPS 0.001\n#define MAX_ITR 100\n#define MAX_DIS 100.0\n#define PI\t \t  3.141592\n\nuniform float u_water_scale;\nuniform float u_water_speed;\n\nuniform vec3 u_sea_base;\nuniform vec3 u_water_color;\nuniform float u_sea_height;\n\n// Distance Functions\nfloat sd_sph(vec3 p, float r) { return length(p) - r; }\n\n// Distance Map\nfloat map(vec3 p, vec2 sc)\n{    \n    float l = cos(length(p * 2.0));\n    vec2 u = vec2(l, sc.y);\n    vec2 um = u * 0.3;\n    um.x += u_time * 0.1 * u_water_speed;\n    um.y += -u_time * 0.025 * u_water_speed;\n    um.x += (um.y) * 2.0;    \n    float a1 = texture2D(u_texture, (p.yz  *  .4 + um) * u_water_scale).x;\n    float a2 = texture2D(u_texture, (p.zx  *  .4 + um) * u_water_scale).x;\n    float a3 = texture2D(u_texture, (p.xy  *  .4 + um) * u_water_scale).x;\n    \n    float t1 = a1 + a2 + a3;\n    t1 /= 15.0 * u_water_scale;\n    \n    float b1 = texture2D(u_texture, (p.yz  *  1. + u) * u_water_scale).x;\n    float b2 = texture2D(u_texture, (p.zx  *  1. + u) * u_water_scale).x;\n    float b3 = texture2D(u_texture, (p.xy  *  1. + u) * u_water_scale).x;\n    \n    float t2 = b1 + b2 + b3;\n    t2 /= 15.0  *  u_water_scale;\n    \n    float comb = t1 * 0.4 + t2 * 0.1 * (1.0 - t1);\n    \n    return comb + sd_sph(p, 3.); // sd_box(p, vec3(1., 1., 1.)) + sdPlane(p, vec4(0., 0., 1.0, 0.));//\n}\n\nfloat diffuse(vec3 n,vec3 l,float p) {\n    return pow(dot(n,l) * 0.4 + 0.6,p);\n}\n\nfloat specular(vec3 n,vec3 l,vec3 e,float s) {    \n    float nrm = (s + 8.0) / (PI * 8.0);\n    return pow(max(dot(reflect(e,n),l),0.0),s) * nrm;\n}\n\n// sky\nvec3 getSkyColor(vec3 e) {\n    e.y = max(e.y,0.0);\n    return vec3(pow(1.0-e.y,2.0), 1.0-e.y, 0.6+(1.0-e.y)*0.4);\n}\n\nvec3 getSeaColor(vec3 p, vec3 n, vec3 l, vec3 eye, vec3 dist) {  \n    float fresnel = clamp(1.0 - dot(n,-eye), 0.0, 1.0);\n    fresnel = pow(fresnel,3.0) * 0.65;\n\n    vec3 reflected = getSkyColor(reflect(eye,n));    \n    vec3 refracted = u_sea_base + diffuse(normalize(n),l,80.0) * u_water_color * 0.12; \n\n    vec3 color =  mix(refracted,reflected,fresnel);\n\n    float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);\n    color += u_water_color * (length(p) - u_sea_height) * 0.18 * atten; // \n\n    color += vec3(specular(n,l,eye,20.0));\n\n    return color;\n}\n\nvoid main (void) {\n\n    vec2 uv = vec2(v_uv.x * 0.5, v_uv.y * 0.5);//  / iResolution.xy;\n    \n    vec3 pos = v_position; \n    vec3 dist = pos - u_cameraPos;\n\n    float dis = EPS;\n    vec3 rayDir = normalize(dist);\n    \n    // Ray marching\n    for(int i = 0; i &lt; MAX_ITR; i++)\n    {\n        if(dis &lt; EPS || dis > MAX_DIS)\n          break;\n        dis = map(pos, uv);\n        pos += dis * rayDir;\n    }\n    \n    if (dis >= EPS) \n    {\n      discard;\n    }\n    \n    vec3 lig = normalize(vec3(-1., -3, -4.5));\n    vec2 eps = vec2(0.0, EPS);\n    vec3 normal = normalize(vec3(\n        map(pos + eps.yxx, uv) - map(pos - eps.yxx, uv),\n        map(pos + eps.xyx, uv) - map(pos - eps.xyx, uv),\n        map(pos + eps.xxy, uv) - map(pos - eps.xxy, uv)\n    ));\n    \n    vec3 col = getSeaColor(pos, normal, lig, rayDir, dist);\n    \n    gl_FragColor = vec4(col,1.0);\n}\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 初始化 shader</span>\nShader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"water\"</span><span class=\"token punctuation\">,</span> vertexSource<span class=\"token punctuation\">,</span> fragSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ShaderMaterial</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Material</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"water\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_height\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_scale\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_speed\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_base\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_color\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShaderMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建球体形的海面</span>\n<span class=\"token keyword\">const</span> sphereEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sphere\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 加载噪声纹理</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D<span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*AC4IQZ6mfCIAAAAAAAAAAAAAARQnAQ\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_texture\"</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// u_time 更新脚本</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WaterScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_time\"</span><span class=\"token punctuation\">,</span> engine<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>timeSinceStartup <span class=\"token operator\">*</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nsphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>WaterScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// debug</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">openDebug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> shaderData <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> baseColor <span class=\"token operator\">=</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_base\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> waterColor <span class=\"token operator\">=</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> debug <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    sea_height<span class=\"token operator\">:</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_height\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    water_scale<span class=\"token operator\">:</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_scale\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    water_speed<span class=\"token operator\">:</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_speed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sea_base<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>baseColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> baseColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> baseColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    water_color<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>waterColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> waterColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> waterColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sea_height\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_height\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"water_scale\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_scale\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"water_speed\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_speed\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sea_base\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    baseColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    baseColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    baseColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"water_color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    waterColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    waterColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    waterColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">openDebug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Flip\n   * @category 2D\n   */\n  // Create engine object.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity.\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var spriteEntity = new _oasisEngine.Entity(engine, \"spriteFlip\");\n    var spriteRenderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n    spriteRenderer.sprite = new _oasisEngine.Sprite(engine, texture); // Display mormal.\n\n    addFlipEntity(spriteEntity, -15, false, false); // Display flip x.\n\n    addFlipEntity(spriteEntity.clone(), -5, true, false); // Display flip y.\n\n    addFlipEntity(spriteEntity.clone(), 5, false, true); // Display flip x and y.\n\n    addFlipEntity(spriteEntity.clone(), 15, true, true);\n  });\n  engine.run();\n  /**\n   * Add flip entity.\n   */\n\n  function addFlipEntity(entity, posX, flipX, flipY) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(posX, 0, 0);\n    var flipRenderer = entity.getComponent(_oasisEngine.SpriteRenderer);\n    flipRenderer.flipX = flipX;\n    flipRenderer.flipY = flipY;\n  }\n});"},"name":"sprite-flip","title":"Sprite Flip","category":"2D","id":"f268e663-f3b2-564b-ab41-6eeae6b5f261","sourceCode":"/**\n * @title Sprite Flip\n * @category 2D\n */\nimport { AssetType, Camera, Entity, Sprite, SpriteRenderer, Texture2D, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\n// Create engine object.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity.\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const spriteEntity = new Entity(engine, \"spriteFlip\");\n    const spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n    spriteRenderer.sprite = new Sprite(engine, texture);\n\n    // Display mormal.\n    addFlipEntity(spriteEntity, -15, false, false);\n    // Display flip x.\n    addFlipEntity(spriteEntity.clone(), -5, true, false);\n    // Display flip y.\n    addFlipEntity(spriteEntity.clone(), 5, false, true);\n    // Display flip x and y.\n    addFlipEntity(spriteEntity.clone(), 15, true, true);\n  });\n\nengine.run();\n\n/**\n * Add flip entity.\n */\nfunction addFlipEntity(entity: Entity, posX: number, flipX: boolean, flipY: boolean): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(posX, 0, 0);\n  const flipRenderer = entity.getComponent(SpriteRenderer);\n  flipRenderer.flipX = flipX;\n  flipRenderer.flipY = flipY;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Flip\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity.</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entity</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"spriteFlip\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spriteRenderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Display mormal.</span>\n    <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display flip x.</span>\n    <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display flip y.</span>\n    <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display flip x and y.</span>\n    <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Add flip entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> posX<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> flipX<span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">,</span> flipY<span class=\"token operator\">:</span> boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> flipRenderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  flipRenderer<span class=\"token punctuation\">.</span>flipX <span class=\"token operator\">=</span> flipX<span class=\"token punctuation\">;</span>\n  flipRenderer<span class=\"token punctuation\">.</span>flipY <span class=\"token operator\">=</span> flipY<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create sprite renderer\n\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ApFPTZSqcMkAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    var _loop = function _loop(i) {\n      setTimeout(function () {\n        var spriteEntity = rootEntity.createChild(\"sprite_\" + i);\n        spriteEntity.transform.position = new _oasisEngine.Vector3(0, 0, 0);\n        var spriteRenderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n        var sprite = new _oasisEngine.Sprite(engine, texture);\n        spriteRenderer.sprite = sprite; // spriteRenderer.flipX = true;\n        // spriteRenderer.flipY = true;\n\n        var rect = spriteRenderer.sprite.rect;\n        var scaleX = 100.0 / rect.width;\n        var scaleY = 100.0 / rect.height;\n        spriteEntity.transform.setScale(scaleX, scaleY, 1);\n        spriteEntity.addComponent(SpriteController);\n      }, 2000 * i);\n    };\n\n    for (var i = 0; i < 10; ++i) {\n      _loop(i);\n    }\n  });\n  engine.run(); // Script for sprite\n\n  var SpriteController = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(SpriteController, _Script);\n\n    function SpriteController() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._radius = 1.5;\n      _this._curRadian = void 0;\n      _this._scale = void 0;\n      _this._scaleFlag = void 0;\n      return _this;\n    }\n\n    var _proto = SpriteController.prototype;\n\n    _proto.onAwake = function onAwake() {\n      this._curRadian = 0;\n      this._radius = 15;\n      this._scale = 0.5;\n      this._scaleFlag = true;\n    };\n\n    _proto.onUpdate = function onUpdate() {\n      // Update position.\n      this._curRadian += 0.005;\n      var _radius = this._radius,\n          _curRadian = this._curRadian,\n          entity = this.entity;\n      var transform = entity.transform;\n\n      var posX = Math.cos(_curRadian) * _radius;\n\n      var posY = Math.sin(_curRadian) * _radius;\n\n      transform.setPosition(posX, posY, 0); // Update scale.\n\n      this._scale += this._scaleFlag ? 0.005 : -0.005;\n      var _scale = this._scale;\n      transform.setScale(_scale, _scale, _scale);\n\n      if (this._scale >= 0.6) {\n        this._scaleFlag = false;\n      } else if (this._scale <= 0.4) {\n        this._scaleFlag = true;\n      } // Update rotation.\n\n\n      SpriteController._curRotation += 0.05;\n      var _curRotation = SpriteController._curRotation;\n      transform.setRotation(0, 0, _curRotation);\n    };\n\n    return SpriteController;\n  }(_oasisEngine.Script);\n\n  SpriteController._curRotation = 0;\n});"},"name":"sprite-renderer","title":"Sprite Renderer","category":"2D","id":"29e620be-ac2d-52af-9aaf-da989807f25f","sourceCode":"/**\n * @title Sprite Renderer\n * @category 2D\n */\nimport { AssetType, Camera, Script, Sprite, SpriteRenderer, Texture2D, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create sprite renderer\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ApFPTZSqcMkAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    for (let i = 0; i < 10; ++i) {\n      setTimeout(() => {\n        const spriteEntity = rootEntity.createChild(`sprite_${i}`);\n        spriteEntity.transform.position = new Vector3(0, 0, 0);\n        const spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n        const sprite = new Sprite(engine, texture);\n        spriteRenderer.sprite = sprite;\n        // spriteRenderer.flipX = true;\n        // spriteRenderer.flipY = true;\n        const rect = spriteRenderer.sprite.rect;\n        const scaleX = 100.0 / rect.width;\n        const scaleY = 100.0 / rect.height;\n        spriteEntity.transform.setScale(scaleX, scaleY, 1);\n        spriteEntity.addComponent(SpriteController);\n      }, 2000 * i);\n    }\n  });\n\nengine.run();\n\n// Script for sprite\nclass SpriteController extends Script {\n  static _curRotation: number = 0;\n\n  private _radius: number = 1.5;\n  private _curRadian: number;\n  private _scale: number;\n  private _scaleFlag: boolean;\n\n  onAwake() {\n    this._curRadian = 0;\n    this._radius = 15;\n    this._scale = 0.5;\n    this._scaleFlag = true;\n  }\n\n  onUpdate() {\n    // Update position.\n    this._curRadian += 0.005;\n    const { _radius, _curRadian, entity } = this;\n    const { transform } = entity;\n    const posX = Math.cos(_curRadian) * _radius;\n    const posY = Math.sin(_curRadian) * _radius;\n    transform.setPosition(posX, posY, 0);\n\n    // Update scale.\n    this._scale += this._scaleFlag ? 0.005 : -0.005;\n    const { _scale } = this;\n    transform.setScale(_scale, _scale, _scale);\n    if (this._scale >= 0.6) {\n      this._scaleFlag = false;\n    } else if (this._scale <= 0.4) {\n      this._scaleFlag = true;\n    }\n\n    // Update rotation.\n    SpriteController._curRotation += 0.05;\n    const { _curRotation } = SpriteController;\n    transform.setRotation(0, 0, _curRotation);\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Renderer\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create sprite renderer</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ApFPTZSqcMkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">sprite_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spriteEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> spriteRenderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spriteRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> sprite<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// spriteRenderer.flipX = true;</span>\n        <span class=\"token comment\">// spriteRenderer.flipY = true;</span>\n        <span class=\"token keyword\">const</span> rect <span class=\"token operator\">=</span> spriteRenderer<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> scaleX <span class=\"token operator\">=</span> <span class=\"token number\">100.0</span> <span class=\"token operator\">/</span> rect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> scaleY <span class=\"token operator\">=</span> <span class=\"token number\">100.0</span> <span class=\"token operator\">/</span> rect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n        spriteEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>scaleX<span class=\"token punctuation\">,</span> scaleY<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteController<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Script for sprite</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SpriteController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> _curRotation<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _radius<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _curRadian<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _scale<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _scaleFlag<span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curRadian <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_radius <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scale <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Update position.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curRadian <span class=\"token operator\">+=</span> <span class=\"token number\">0.005</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> _radius<span class=\"token punctuation\">,</span> _curRadian<span class=\"token punctuation\">,</span> entity <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transform <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> posX <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>_curRadian<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> _radius<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> posY <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>_curRadian<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> _radius<span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> posY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update scale.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scale <span class=\"token operator\">+=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleFlag <span class=\"token operator\">?</span> <span class=\"token number\">0.005</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">0.005</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> _scale <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>_scale<span class=\"token punctuation\">,</span> _scale<span class=\"token punctuation\">,</span> _scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scale <span class=\"token operator\">>=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scale <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Update rotation.</span>\n    SpriteController<span class=\"token punctuation\">.</span>_curRotation <span class=\"token operator\">+=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> _curRotation <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> SpriteController<span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _curRotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Material\n   * @category 2D\n   */\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var texSize = new _oasisEngine.Vector2(texture.width, texture.height);\n    var spriteEntity = rootEntity.createChild(\"spriteBlur\");\n    spriteEntity.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, texture);\n    spriteEntity.transform.setScale(4, 4, 4); // The blur algorithm will sample the edges of the texture.\n    // Set the clamp warp mode to avoid mis-sampling caused by repeate warp mode.\n\n    texture.wrapModeU = texture.wrapModeV = _oasisEngine.TextureWrapMode.Clamp; // Display normal\n\n    addCustomMaterialSpriteEntity(spriteEntity, -22.5, texSize, 0.0); // Display low blur\n\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), -7.5, texSize, 1.0); // Display moderate blur\n\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), 7.5, texSize, 2.0); // Display highly blur\n\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), 22.5, texSize, 3.0);\n  });\n  engine.run();\n\n  function addCustomMaterialSpriteEntity(entity, posX, texSize, blurSize) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(posX, 0, 0); // Create material\n\n    var material = new _oasisEngine.Material(engine, _oasisEngine.Shader.find(\"SpriteBlur\"));\n    entity.getComponent(_oasisEngine.SpriteRenderer).setMaterial(material); // Init state\n\n    var target = material.renderState.blendState.targetBlendState;\n    target.enabled = true;\n    target.sourceColorBlendFactor = _oasisEngine.BlendFactor.SourceAlpha;\n    target.destinationColorBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    target.sourceAlphaBlendFactor = _oasisEngine.BlendFactor.One;\n    target.destinationAlphaBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    target.colorBlendOperation = target.alphaBlendOperation = _oasisEngine.BlendOperation.Add;\n    material.renderState.depthState.writeEnabled = false;\n    material.renderQueueType = _oasisEngine.RenderQueueType.Transparent;\n    material.renderState.rasterState.cullMode = _oasisEngine.CullMode.Off; // Set uniform\n\n    material.shaderData.setVector2(\"u_texSize\", texSize);\n    material.shaderData.setFloat(\"u_blurSize\", blurSize);\n  } // Custom shader\n\n\n  var spriteVertShader = \"\\n  precision highp float;\\n\\n  uniform mat4 u_VPMat;\\n\\n  attribute vec3 POSITION;\\n  attribute vec2 TEXCOORD_0;\\n  attribute vec4 COLOR_0;\\n\\n  varying vec4 v_color;\\n  varying vec2 v_uv;\\n\\n  void main()\\n  {\\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\\n    v_color = COLOR_0;\\n    v_uv = TEXCOORD_0;\\n  }\\n\";\n  var spriteFragmentShader = \"\\n  precision mediump float;\\n  precision mediump int;\\n\\n  uniform sampler2D u_spriteTexture;\\n  uniform float u_blurSize;\\n  uniform vec2 u_texSize;\\n\\n  varying vec2 v_uv;\\n  varying vec4 v_color;\\n\\n  float normpdf(float x, float sigma) {\\n    return 0.39894 * exp(-0.5 * x * x / (sigma * sigma)) / sigma;\\n  }\\n\\n  void main() {\\n    vec4 color = texture2D(u_spriteTexture, v_uv);\\n    const int mSize = 11;\\n    const int kSize = (mSize - 1) / 2;\\n    float kernel[mSize];\\n    vec3 final_colour = vec3(0.0);\\n\\n    // create the 1-D kernel\\n    float sigma = 7.0;\\n    float Z = 0.0;\\n    for (int i = 0; i <= kSize; ++i) {\\n      kernel[kSize+i] = kernel[kSize - i] = normpdf(float(i), sigma);\\n    }\\n\\n    // get the normalization factor (as the gaussian has been clamped)\\n    for (int i = 0; i < mSize; ++i) {\\n      Z += kernel[i];\\n    }\\n\\n    // read out the texels\\n    float offsetX = u_blurSize / u_texSize.x;\\n    float offsetY = u_blurSize / u_texSize.y;\\n    vec2 uv;\\n    for (int i = -kSize; i <= kSize; ++i) {\\n      for (int j = -kSize; j <= kSize; ++j) {\\n        uv = v_uv.xy + vec2(float(i) * offsetX, float(j) * offsetY);\\n        final_colour += kernel[kSize + j] * kernel[kSize + i] * texture2D(u_spriteTexture, uv).rgb;\\n      }\\n    }\\n\\n    gl_FragColor = vec4(final_colour / (Z * Z), color.a) * v_color;\\n  }\\n\";\n\n  _oasisEngine.Shader.create(\"SpriteBlur\", spriteVertShader, spriteFragmentShader);\n});"},"name":"sprite-material","title":"Sprite Material","category":"2D","id":"d90fe274-059e-5137-b174-635bd122c574","sourceCode":"/**\n * @title Sprite Material\n * @category 2D\n */\nimport { AssetType, BlendFactor, BlendOperation, Camera, CullMode, Entity, Material, RenderQueueType, Shader, Sprite, SpriteRenderer, Texture2D, TextureWrapMode, Vector2, Vector3, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const texSize = new Vector2(texture.width, texture.height);\n    const spriteEntity = rootEntity.createChild(\"spriteBlur\");\n\n    spriteEntity.addComponent(SpriteRenderer).sprite = new Sprite(engine, texture);\n    spriteEntity.transform.setScale(4, 4, 4);\n    // The blur algorithm will sample the edges of the texture.\n    // Set the clamp warp mode to avoid mis-sampling caused by repeate warp mode.\n    texture.wrapModeU = texture.wrapModeV = TextureWrapMode.Clamp;\n\n    // Display normal\n    addCustomMaterialSpriteEntity(spriteEntity, -22.5, texSize, 0.0);\n    // Display low blur\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), -7.5, texSize, 1.0);\n    // Display moderate blur\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), 7.5, texSize, 2.0);\n    // Display highly blur\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), 22.5, texSize, 3.0);\n  });\n\nengine.run();\n\nfunction addCustomMaterialSpriteEntity(entity: Entity, posX: number, texSize: Vector2, blurSize: number): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(posX, 0, 0);\n  // Create material\n  const material = new Material(engine, Shader.find(\"SpriteBlur\"));\n  entity.getComponent(SpriteRenderer).setMaterial(material);\n  // Init state\n  const target = material.renderState.blendState.targetBlendState;\n  target.enabled = true;\n  target.sourceColorBlendFactor = BlendFactor.SourceAlpha;\n  target.destinationColorBlendFactor = BlendFactor.OneMinusSourceAlpha;\n  target.sourceAlphaBlendFactor = BlendFactor.One;\n  target.destinationAlphaBlendFactor = BlendFactor.OneMinusSourceAlpha;\n  target.colorBlendOperation = target.alphaBlendOperation = BlendOperation.Add;\n  material.renderState.depthState.writeEnabled = false;\n  material.renderQueueType = RenderQueueType.Transparent;\n  material.renderState.rasterState.cullMode = CullMode.Off;\n  // Set uniform\n  material.shaderData.setVector2(\"u_texSize\", texSize);\n  material.shaderData.setFloat(\"u_blurSize\", blurSize);\n}\n\n// Custom shader\nconst spriteVertShader = `\n  precision highp float;\n\n  uniform mat4 u_VPMat;\n\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n\n  varying vec4 v_color;\n  varying vec2 v_uv;\n\n  void main()\n  {\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\n    v_color = COLOR_0;\n    v_uv = TEXCOORD_0;\n  }\n`;\n\nconst spriteFragmentShader = `\n  precision mediump float;\n  precision mediump int;\n\n  uniform sampler2D u_spriteTexture;\n  uniform float u_blurSize;\n  uniform vec2 u_texSize;\n\n  varying vec2 v_uv;\n  varying vec4 v_color;\n\n  float normpdf(float x, float sigma) {\n    return 0.39894 * exp(-0.5 * x * x / (sigma * sigma)) / sigma;\n  }\n\n  void main() {\n    vec4 color = texture2D(u_spriteTexture, v_uv);\n    const int mSize = 11;\n    const int kSize = (mSize - 1) / 2;\n    float kernel[mSize];\n    vec3 final_colour = vec3(0.0);\n\n    // create the 1-D kernel\n    float sigma = 7.0;\n    float Z = 0.0;\n    for (int i = 0; i <= kSize; ++i) {\n      kernel[kSize+i] = kernel[kSize - i] = normpdf(float(i), sigma);\n    }\n\n    // get the normalization factor (as the gaussian has been clamped)\n    for (int i = 0; i < mSize; ++i) {\n      Z += kernel[i];\n    }\n\n    // read out the texels\n    float offsetX = u_blurSize / u_texSize.x;\n    float offsetY = u_blurSize / u_texSize.y;\n    vec2 uv;\n    for (int i = -kSize; i <= kSize; ++i) {\n      for (int j = -kSize; j <= kSize; ++j) {\n        uv = v_uv.xy + vec2(float(i) * offsetX, float(j) * offsetY);\n        final_colour += kernel[kSize + j] * kernel[kSize + i] * texture2D(u_spriteTexture, uv).rgb;\n      }\n    }\n\n    gl_FragColor = vec4(final_colour / (Z * Z), color.a) * v_color;\n  }\n`;\n\nShader.create(\"SpriteBlur\", spriteVertShader, spriteFragmentShader);\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Material\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> BlendFactor<span class=\"token punctuation\">,</span> BlendOperation<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> CullMode<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> Material<span class=\"token punctuation\">,</span> RenderQueueType<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> TextureWrapMode<span class=\"token punctuation\">,</span> Vector2<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> texSize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spriteBlur\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// The blur algorithm will sample the edges of the texture.</span>\n    <span class=\"token comment\">// Set the clamp warp mode to avoid mis-sampling caused by repeate warp mode.</span>\n    texture<span class=\"token punctuation\">.</span>wrapModeU <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">.</span>wrapModeV <span class=\"token operator\">=</span> TextureWrapMode<span class=\"token punctuation\">.</span>Clamp<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Display normal</span>\n    <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">22.5</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display low blur</span>\n    <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display moderate blur</span>\n    <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display highly blur</span>\n    <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22.5</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">,</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> posX<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> texSize<span class=\"token operator\">:</span> Vector2<span class=\"token punctuation\">,</span> blurSize<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Create material</span>\n  <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Material</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpriteBlur\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Init state</span>\n  <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>blendState<span class=\"token punctuation\">.</span>targetBlendState<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>sourceColorBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>SourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>destinationColorBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>OneMinusSourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>sourceAlphaBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>One<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>destinationAlphaBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>OneMinusSourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>colorBlendOperation <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>alphaBlendOperation <span class=\"token operator\">=</span> BlendOperation<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>depthState<span class=\"token punctuation\">.</span>writeEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>renderQueueType <span class=\"token operator\">=</span> RenderQueueType<span class=\"token punctuation\">.</span>Transparent<span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>rasterState<span class=\"token punctuation\">.</span>cullMode <span class=\"token operator\">=</span> CullMode<span class=\"token punctuation\">.</span>Off<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Set uniform</span>\n  material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setVector2</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_texSize\"</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_blurSize\"</span><span class=\"token punctuation\">,</span> blurSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Custom shader</span>\n<span class=\"token keyword\">const</span> spriteVertShader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  precision highp float;\n\n  uniform mat4 u_VPMat;\n\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n\n  varying vec4 v_color;\n  varying vec2 v_uv;\n\n  void main()\n  {\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\n    v_color = COLOR_0;\n    v_uv = TEXCOORD_0;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> spriteFragmentShader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  precision mediump float;\n  precision mediump int;\n\n  uniform sampler2D u_spriteTexture;\n  uniform float u_blurSize;\n  uniform vec2 u_texSize;\n\n  varying vec2 v_uv;\n  varying vec4 v_color;\n\n  float normpdf(float x, float sigma) {\n    return 0.39894 * exp(-0.5 * x * x / (sigma * sigma)) / sigma;\n  }\n\n  void main() {\n    vec4 color = texture2D(u_spriteTexture, v_uv);\n    const int mSize = 11;\n    const int kSize = (mSize - 1) / 2;\n    float kernel[mSize];\n    vec3 final_colour = vec3(0.0);\n\n    // create the 1-D kernel\n    float sigma = 7.0;\n    float Z = 0.0;\n    for (int i = 0; i &lt;= kSize; ++i) {\n      kernel[kSize+i] = kernel[kSize - i] = normpdf(float(i), sigma);\n    }\n\n    // get the normalization factor (as the gaussian has been clamped)\n    for (int i = 0; i &lt; mSize; ++i) {\n      Z += kernel[i];\n    }\n\n    // read out the texels\n    float offsetX = u_blurSize / u_texSize.x;\n    float offsetY = u_blurSize / u_texSize.y;\n    vec2 uv;\n    for (int i = -kSize; i &lt;= kSize; ++i) {\n      for (int j = -kSize; j &lt;= kSize; ++j) {\n        uv = v_uv.xy + vec2(float(i) * offsetX, float(j) * offsetY);\n        final_colour += kernel[kSize + j] * kernel[kSize + i] * texture2D(u_spriteTexture, uv).rgb;\n      }\n    }\n\n    gl_FragColor = vec4(final_colour / (Z * Z), color.a) * v_color;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\nShader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpriteBlur\"</span><span class=\"token punctuation\">,</span> spriteVertShader<span class=\"token punctuation\">,</span> spriteFragmentShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // Create engine\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create yellow duck\n\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\").then(function (gltf) {\n    // Create root entity.\n    var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n    var cameraEntity = rootEntity.createChild(\"CameraEntity\");\n    cameraEntity.transform.setPosition(0, 3, 9);\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.addComponent(_controls.OrbitControl); // Create light.\n\n    var lightEntity = rootEntity.createChild(\"LightEntity\");\n    var ambient = lightEntity.addComponent(_oasisEngine.AmbientLight);\n    var directLight = lightEntity.addComponent(_oasisEngine.DirectLight);\n    ambient.color = new _oasisEngine.Color(0.5, 0.5, 0.5);\n    directLight.color = new _oasisEngine.Color(0.5, 0.5, 0.5); // Create three duck modles, set rotation and position.\n\n    var duck0 = gltf.defaultSceneRoot;\n    duck0.transform.rotate(0, -45, 0);\n    var duck1 = duck0.clone();\n    var duck2 = duck0.clone();\n    duck1.transform.setPosition(-3, 0, 0);\n    duck2.transform.setPosition(3, 0, 0); // Create root entity and add transform script.\n\n    var script = rootEntity.addComponent(TransformScript);\n    script.duck0 = duck0;\n    script.duck1 = duck1;\n    script.duck2 = duck2; // Add ducks to scene.\n\n    rootEntity.addChild(duck0);\n    rootEntity.addChild(duck1);\n    rootEntity.addChild(duck2); //Run engine.\n\n    engine.run();\n  });\n  /**\n   * Script for updating ducks position, rotation, and scale.\n   */\n\n  var TransformScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(TransformScript, _Script);\n\n    function TransformScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.duck0 = void 0;\n      _this.duck1 = void 0;\n      _this.duck2 = void 0;\n      _this._totalTime = 0;\n      return _this;\n    }\n\n    var _proto = TransformScript.prototype;\n\n    /**\n     * @override\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      this._totalTime += deltaTime;\n      var sinFactor = Math.sin(this._totalTime / 500); // Update duck0's position.\n\n      var positionFactor = Math.max(sinFactor, 0);\n      this.duck0.transform.setPosition(0, positionFactor, 0); // Update duck1's roatation.\n\n      var rotateFactor = this._totalTime * 0.1;\n      this.duck1.transform.setRotation(0, rotateFactor, 0); // Update duck2's scale.\n\n      var scaleFactor = (sinFactor + 1.0) * 0.01;\n      this.duck2.transform.setScale(scaleFactor, scaleFactor, scaleFactor);\n    };\n\n    return TransformScript;\n  }(_oasisEngine.Script);\n});"},"name":"transform","title":"Transform","category":"Basic","id":"b29a3f99-abce-5180-9bdd-b71b5d811360","sourceCode":"/**\n * @title Transform\n * @category Basic\n */\nimport { AmbientLight, Camera, Color, DirectLight, Entity, GLTFResource, Script, WebGLEngine } from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\n// Create engine\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create yellow duck\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\")\n  .then((gltf) => {\n    // Create root entity.\n    const rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n    // Create camera.\n    const cameraEntity = rootEntity.createChild(\"CameraEntity\");\n    cameraEntity.transform.setPosition(0, 3, 9);\n    cameraEntity.addComponent(Camera);\n    cameraEntity.addComponent(OrbitControl);\n\n    // Create light.\n    const lightEntity = rootEntity.createChild(\"LightEntity\");\n    const ambient = lightEntity.addComponent(AmbientLight);\n    const directLight = lightEntity.addComponent(DirectLight);\n    ambient.color = new Color(0.5, 0.5, 0.5);\n    directLight.color = new Color(0.5, 0.5, 0.5);\n\n    // Create three duck modles, set rotation and position.\n    const duck0 = gltf.defaultSceneRoot;\n    duck0.transform.rotate(0, -45, 0);\n\n    const duck1 = duck0.clone();\n    const duck2 = duck0.clone();\n    duck1.transform.setPosition(-3, 0, 0);\n    duck2.transform.setPosition(3, 0, 0);\n\n    // Create root entity and add transform script.\n    const script = rootEntity.addComponent(TransformScript);\n    script.duck0 = duck0;\n    script.duck1 = duck1;\n    script.duck2 = duck2;\n\n    // Add ducks to scene.\n    rootEntity.addChild(duck0);\n    rootEntity.addChild(duck1);\n    rootEntity.addChild(duck2);\n\n    //Run engine.\n    engine.run();\n  });\n\n/**\n * Script for updating ducks position, rotation, and scale.\n */\nclass TransformScript extends Script {\n  /** Duck0. */\n  duck0: Entity;\n  /** Duck1. */\n  duck1: Entity;\n  /** Duck2. */\n  duck2: Entity;\n\n  private _totalTime: number = 0;\n\n  /**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    this._totalTime += deltaTime;\n    const sinFactor = Math.sin(this._totalTime / 500);\n\n    // Update duck0's position.\n    const positionFactor = Math.max(sinFactor, 0);\n    this.duck0.transform.setPosition(0, positionFactor, 0);\n\n    // Update duck1's roatation.\n    const rotateFactor = this._totalTime * 0.1;\n    this.duck1.transform.setRotation(0, rotateFactor, 0);\n\n    // Update duck2's scale.\n    const scaleFactor = (sinFactor + 1.0) * 0.01;\n    this.duck2.transform.setScale(scaleFactor, scaleFactor, scaleFactor);\n  }\n}","formatedCode":"<span class=\"token comment\">/**\n * @title Transform\n * @category Basic\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AmbientLight<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create yellow duck</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create root entity.</span>\n    <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create camera.</span>\n    <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CameraEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create light.</span>\n    <span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LightEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> ambient <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AmbientLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> directLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ambient<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    directLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create three duck modles, set rotation and position.</span>\n    <span class=\"token keyword\">const</span> duck0 <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">;</span>\n    duck0<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> duck1 <span class=\"token operator\">=</span> duck0<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> duck2 <span class=\"token operator\">=</span> duck0<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    duck1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    duck2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create root entity and add transform script.</span>\n    <span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>TransformScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    script<span class=\"token punctuation\">.</span>duck0 <span class=\"token operator\">=</span> duck0<span class=\"token punctuation\">;</span>\n    script<span class=\"token punctuation\">.</span>duck1 <span class=\"token operator\">=</span> duck1<span class=\"token punctuation\">;</span>\n    script<span class=\"token punctuation\">.</span>duck2 <span class=\"token operator\">=</span> duck2<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Add ducks to scene.</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>duck0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>duck1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>duck2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//Run engine.</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Script for updating ducks position, rotation, and scale.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TransformScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** Duck0. */</span>\n  duck0<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Duck1. */</span>\n  duck1<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Duck2. */</span>\n  duck2<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _totalTime<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalTime <span class=\"token operator\">+=</span> deltaTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> sinFactor <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalTime <span class=\"token operator\">/</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update duck0's position.</span>\n    <span class=\"token keyword\">const</span> positionFactor <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>sinFactor<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>duck0<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> positionFactor<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update duck1's roatation.</span>\n    <span class=\"token keyword\">const</span> rotateFactor <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalTime <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>duck1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> rotateFactor<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update duck2's scale.</span>\n    <span class=\"token keyword\">const</span> scaleFactor <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sinFactor <span class=\"token operator\">+</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>duck2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>scaleFactor<span class=\"token punctuation\">,</span> scaleFactor<span class=\"token punctuation\">,</span> scaleFactor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>"}]}},"pageContext":{}},"staticQueryHashes":[]}